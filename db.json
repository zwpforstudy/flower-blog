{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"themes/landscape/source/css/style.styl","path":"css/style.styl","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/blank.gif","path":"fancybox/blank.gif","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_loading.gif","path":"fancybox/fancybox_loading.gif","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_loading@2x.gif","path":"fancybox/fancybox_loading@2x.gif","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_overlay.png","path":"fancybox/fancybox_overlay.png","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_sprite.png","path":"fancybox/fancybox_sprite.png","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_sprite@2x.png","path":"fancybox/fancybox_sprite@2x.png","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.css","path":"fancybox/jquery.fancybox.css","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.pack.js","path":"fancybox/jquery.fancybox.pack.js","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.js","path":"fancybox/jquery.fancybox.js","modified":0,"renderable":1},{"_id":"themes/landscape/source/js/script.js","path":"js/script.js","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.eot","path":"css/fonts/fontawesome-webfont.eot","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/fonts/FontAwesome.otf","path":"css/fonts/FontAwesome.otf","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.woff","path":"css/fonts/fontawesome-webfont.woff","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.css","path":"fancybox/helpers/jquery.fancybox-buttons.css","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/fancybox_buttons.png","path":"fancybox/helpers/fancybox_buttons.png","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.js","path":"fancybox/helpers/jquery.fancybox-buttons.js","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-media.js","path":"fancybox/helpers/jquery.fancybox-media.js","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.css","path":"fancybox/helpers/jquery.fancybox-thumbs.css","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.js","path":"fancybox/helpers/jquery.fancybox-thumbs.js","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.ttf","path":"css/fonts/fontawesome-webfont.ttf","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.svg","path":"css/fonts/fontawesome-webfont.svg","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/images/banner.jpg","path":"css/images/banner.jpg","modified":0,"renderable":1},{"_id":"themes/landscape/source/images/favicon.jpg","path":"images/favicon.jpg","modified":0,"renderable":1},{"_id":"themes/landscape/source/images/favicon1.jpg","path":"images/favicon1.jpg","modified":0,"renderable":1},{"_id":"themes/landscape/source/images/flower.jpg","path":"images/flower.jpg","modified":0,"renderable":1}],"Cache":[{"_id":"themes/landscape/.gitignore","hash":"58d26d4b5f2f94c2d02a4e4a448088e4a2527c77","modified":1478526661000},{"_id":"themes/landscape/Gruntfile.js","hash":"71adaeaac1f3cc56e36c49d549b8d8a72235c9b9","modified":1478526661000},{"_id":"themes/landscape/LICENSE","hash":"c480fce396b23997ee23cc535518ffaaf7f458f8","modified":1478526661000},{"_id":"themes/landscape/README.md","hash":"c7e83cfe8f2c724fc9cac32bd71bb5faf9ceeddb","modified":1478526661000},{"_id":"themes/landscape/_config.yml","hash":"0aa9a762c5983d42208c75bd90595c035bcf4e50","modified":1478705693000},{"_id":"themes/landscape/package.json","hash":"85358dc34311c6662e841584e206a4679183943f","modified":1478526661000},{"_id":"source/_posts/hello-world.md","hash":"8a02477044e2b77f1b262da2c48c01429e4a32e4","modified":1478526416000},{"_id":"source/_posts/my-first-blog.md","hash":"305ee11c74d8bc7ad1578a89b89f0ddedb1d9fee","modified":1478527256000},{"_id":"themes/landscape/languages/default.yml","hash":"3083f319b352d21d80fc5e20113ddf27889c9d11","modified":1478526661000},{"_id":"themes/landscape/languages/fr.yml","hash":"84ab164b37c6abf625473e9a0c18f6f815dd5fd9","modified":1478526661000},{"_id":"themes/landscape/languages/nl.yml","hash":"12ed59faba1fc4e8cdd1d42ab55ef518dde8039c","modified":1478526661000},{"_id":"themes/landscape/languages/ru.yml","hash":"4fda301bbd8b39f2c714e2c934eccc4b27c0a2b0","modified":1478526661000},{"_id":"themes/landscape/languages/no.yml","hash":"965a171e70347215ec726952e63f5b47930931ef","modified":1478526661000},{"_id":"themes/landscape/languages/zh-CN.yml","hash":"ca40697097ab0b3672a80b455d3f4081292d1eed","modified":1478526661000},{"_id":"themes/landscape/languages/zh-TW.yml","hash":"53ce3000c5f767759c7d2c4efcaa9049788599c3","modified":1478526661000},{"_id":"themes/landscape/layout/category.ejs","hash":"765426a9c8236828dc34759e604cc2c52292835a","modified":1478526661000},{"_id":"themes/landscape/layout/archive.ejs","hash":"2703b07cc8ac64ae46d1d263f4653013c7e1666b","modified":1478526661000},{"_id":"themes/landscape/layout/index.ejs","hash":"aa1b4456907bdb43e629be3931547e2d29ac58c8","modified":1478526661000},{"_id":"themes/landscape/layout/layout.ejs","hash":"f155824ca6130080bb057fa3e868a743c69c4cf5","modified":1478526661000},{"_id":"themes/landscape/layout/page.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1478526661000},{"_id":"themes/landscape/layout/post.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1478526661000},{"_id":"themes/landscape/layout/tag.ejs","hash":"eaa7b4ccb2ca7befb90142e4e68995fb1ea68b2e","modified":1478526661000},{"_id":"themes/landscape/scripts/fancybox.js","hash":"aa411cd072399df1ddc8e2181a3204678a5177d9","modified":1478526661000},{"_id":"themes/landscape/layout/_partial/after-footer.ejs","hash":"a746bb960ac3a8cdd2b2e7ee7b272444e8e2bd75","modified":1478616888000},{"_id":"themes/landscape/layout/_partial/archive-post.ejs","hash":"c7a71425a946d05414c069ec91811b5c09a92c47","modified":1478526661000},{"_id":"themes/landscape/layout/_partial/archive.ejs","hash":"931aaaffa0910a48199388ede576184ff15793ee","modified":1478526661000},{"_id":"themes/landscape/layout/_partial/article.ejs","hash":"c4c835615d96a950d51fa2c3b5d64d0596534fed","modified":1478526661000},{"_id":"themes/landscape/layout/_partial/footer.ejs","hash":"93518893cf91287e797ebac543c560e2a63b8d0e","modified":1478526661000},{"_id":"themes/landscape/layout/_partial/google-analytics.ejs","hash":"f921e7f9223d7c95165e0f835f353b2938e40c45","modified":1478526661000},{"_id":"themes/landscape/layout/_partial/head.ejs","hash":"04bb0838df72ec6d636854e36f5a5f6356ed1f72","modified":1480090597000},{"_id":"themes/landscape/layout/_partial/header.ejs","hash":"c21ca56f419d01a9f49c27b6be9f4a98402b2aa3","modified":1478526661000},{"_id":"themes/landscape/layout/_partial/mobile-nav.ejs","hash":"e952a532dfc583930a666b9d4479c32d4a84b44e","modified":1478526661000},{"_id":"themes/landscape/layout/_partial/sidebar.ejs","hash":"930da35cc2d447a92e5ee8f835735e6fd2232469","modified":1478526661000},{"_id":"themes/landscape/layout/_widget/category.ejs","hash":"dd1e5af3c6af3f5d6c85dfd5ca1766faed6a0b05","modified":1478526661000},{"_id":"themes/landscape/layout/_widget/archive.ejs","hash":"beb4a86fcc82a9bdda9289b59db5a1988918bec3","modified":1478526661000},{"_id":"themes/landscape/layout/_widget/recent_posts.ejs","hash":"0d4f064733f8b9e45c0ce131fe4a689d570c883a","modified":1478526661000},{"_id":"themes/landscape/layout/_widget/tag.ejs","hash":"2de380865df9ab5f577f7d3bcadf44261eb5faae","modified":1478526661000},{"_id":"themes/landscape/layout/_widget/tagcloud.ejs","hash":"b4a2079101643f63993dcdb32925c9b071763b46","modified":1478526661000},{"_id":"themes/landscape/source/css/_extend.styl","hash":"222fbe6d222531d61c1ef0f868c90f747b1c2ced","modified":1478526661000},{"_id":"themes/landscape/source/css/_variables.styl","hash":"5e37a6571caf87149af83ac1cc0cdef99f117350","modified":1478526661000},{"_id":"themes/landscape/source/css/style.styl","hash":"a70d9c44dac348d742702f6ba87e5bb3084d65db","modified":1478526661000},{"_id":"themes/landscape/source/fancybox/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1478526661000},{"_id":"themes/landscape/source/fancybox/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1478526661000},{"_id":"themes/landscape/source/fancybox/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1478526661000},{"_id":"themes/landscape/source/fancybox/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1478526661000},{"_id":"themes/landscape/source/fancybox/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1478526661000},{"_id":"themes/landscape/source/fancybox/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1478526661000},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.css","hash":"aaa582fb9eb4b7092dc69fcb2d5b1c20cca58ab6","modified":1478526661000},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.pack.js","hash":"9e0d51ca1dbe66f6c0c7aefd552dc8122e694a6e","modified":1478526661000},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.js","hash":"d08b03a42d5c4ba456ef8ba33116fdbb7a9cabed","modified":1478526661000},{"_id":"themes/landscape/source/js/script.js","hash":"2876e0b19ce557fca38d7c6f49ca55922ab666a1","modified":1478526661000},{"_id":"themes/landscape/layout/_partial/post/category.ejs","hash":"c6bcd0e04271ffca81da25bcff5adf3d46f02fc0","modified":1478526661000},{"_id":"themes/landscape/layout/_partial/post/date.ejs","hash":"6197802873157656e3077c5099a7dda3d3b01c29","modified":1478526661000},{"_id":"themes/landscape/layout/_partial/post/gallery.ejs","hash":"3d9d81a3c693ff2378ef06ddb6810254e509de5b","modified":1478526661000},{"_id":"themes/landscape/layout/_partial/post/tag.ejs","hash":"2fcb0bf9c8847a644167a27824c9bb19ac74dd14","modified":1478526661000},{"_id":"themes/landscape/layout/_partial/post/title.ejs","hash":"2f275739b6f1193c123646a5a31f37d48644c667","modified":1478526661000},{"_id":"themes/landscape/source/css/_partial/archive.styl","hash":"db15f5677dc68f1730e82190bab69c24611ca292","modified":1478526661000},{"_id":"themes/landscape/source/css/_partial/article.styl","hash":"10685f8787a79f79c9a26c2f943253450c498e3e","modified":1478526661000},{"_id":"themes/landscape/source/css/_partial/comment.styl","hash":"79d280d8d203abb3bd933ca9b8e38c78ec684987","modified":1478526661000},{"_id":"themes/landscape/source/css/_partial/footer.styl","hash":"e35a060b8512031048919709a8e7b1ec0e40bc1b","modified":1478526661000},{"_id":"themes/landscape/source/css/_partial/header.styl","hash":"85ab11e082f4dd86dde72bed653d57ec5381f30c","modified":1478526661000},{"_id":"themes/landscape/source/css/_partial/highlight.styl","hash":"bf4e7be1968dad495b04e83c95eac14c4d0ad7c0","modified":1478526661000},{"_id":"themes/landscape/source/css/_partial/mobile.styl","hash":"a399cf9e1e1cec3e4269066e2948d7ae5854d745","modified":1478526661000},{"_id":"themes/landscape/source/css/_partial/sidebar-aside.styl","hash":"890349df5145abf46ce7712010c89237900b3713","modified":1478526661000},{"_id":"themes/landscape/source/css/_partial/sidebar-bottom.styl","hash":"8fd4f30d319542babfd31f087ddbac550f000a8a","modified":1478526661000},{"_id":"themes/landscape/source/css/_partial/sidebar.styl","hash":"404ec059dc674a48b9ab89cd83f258dec4dcb24d","modified":1478526661000},{"_id":"themes/landscape/source/css/_util/grid.styl","hash":"0bf55ee5d09f193e249083602ac5fcdb1e571aed","modified":1478526661000},{"_id":"themes/landscape/source/css/_util/mixin.styl","hash":"44f32767d9fd3c1c08a60d91f181ee53c8f0dbb3","modified":1478526661000},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.eot","hash":"7619748fe34c64fb157a57f6d4ef3678f63a8f5e","modified":1478526661000},{"_id":"themes/landscape/source/css/fonts/FontAwesome.otf","hash":"b5b4f9be85f91f10799e87a083da1d050f842734","modified":1478526661000},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.woff","hash":"04c3bf56d87a0828935bd6b4aee859995f321693","modified":1478526661000},{"_id":"themes/landscape/layout/_partial/post/nav.ejs","hash":"16a904de7bceccbb36b4267565f2215704db2880","modified":1478526661000},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1478526661000},{"_id":"themes/landscape/source/fancybox/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1478526661000},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.js","hash":"dc3645529a4bf72983a39fa34c1eb9146e082019","modified":1478526661000},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-media.js","hash":"294420f9ff20f4e3584d212b0c262a00a96ecdb3","modified":1478526661000},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1478526661000},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.js","hash":"47da1ae5401c24b5c17cc18e2730780f5c1a7a0c","modified":1478526661000},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.ttf","hash":"7f09c97f333917034ad08fa7295e916c9f72fd3f","modified":1478526661000},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.svg","hash":"46fcc0194d75a0ddac0a038aee41b23456784814","modified":1478526661000},{"_id":"themes/landscape/source/css/images/banner.jpg","hash":"f44aa591089fcb3ec79770a1e102fd3289a7c6a6","modified":1478526661000},{"_id":"themes/landscape/source/images/favicon.jpg","hash":"be9af26ee96a85658d6e90f38cc272da94aca17c","modified":1478705151000},{"_id":"themes/landscape/source/images/favicon1.jpg","hash":"b9cc9717c5586a429197266aa3b9b5b4a816918b","modified":1478705061000},{"_id":"themes/landscape/source/images/flower.jpg","hash":"dedb9f36acd9f88e677540e2e75e3b3f86e21d44","modified":1478705609000},{"_id":"source/_posts/nvm使用.md","hash":"debe63a2ceca6f0bc3c8ba6bb7b33be2b34c1094","modified":1480343163000},{"_id":"source/_posts/npm使用.md","hash":"fcc7ffc11c0f84e2b89a16deac2b20912a2aaf14","modified":1480089059000},{"_id":"source/_posts/基本语法.md","hash":"d37023e25ccf62894cd10fa851f81cdd43ce2e84","modified":1480089906000},{"_id":"source/_posts/盒模型.md","hash":"c15a9bc49075006589a4d13020cd2de25ded58f4","modified":1486706163000},{"_id":"source/_posts/文本.md","hash":"a09e2be0b4e158ace73427a78fb6edfb4ba5cd2b","modified":1480090510000},{"_id":"source/_posts/HTTP/HTTP1.md","hash":"debe63a2ceca6f0bc3c8ba6bb7b33be2b34c1094","modified":1480343526000},{"_id":"source/_posts/HTTP/cookie.md","hash":"8727dae4f8e009e1564b682c7228db1064b01166","modified":1480344352000},{"_id":"source/_posts/HTTP/编码与国际化.md","hash":"75d8c9927a907481588f8d2ff3c0b534ce6e3064","modified":1480345467000},{"_id":"source/_posts/Node/nvm使用.md","hash":"debe63a2ceca6f0bc3c8ba6bb7b33be2b34c1094","modified":1480343163000},{"_id":"source/_posts/login.html","hash":"adb882036b669eb58aae4ba7469faf46a4b821b5","modified":1519789514000},{"_id":"source/_posts/.DS_Store","hash":"df2fbeb1400acda0909a32c1cf6bf492f1121e07","modified":1519797417000}],"Category":[],"Data":[],"Page":[],"Post":[{"title":"npm使用","date":"2015-09-19T15:00:56.000Z","_content":"\n## 1. 它是什么?\n全称为`Node Package Manager`，大大简化了共享、重构代码的痛点\n[官方介绍](https://docs.npmjs.com/getting-started/what-is-npm)\n\n## 2. package.json\n用来管理本地安装Package的最好方式，可以使用`npm init`来创建, 它有以下作用：\n* 展示你的项目依赖哪些PKG\n* 可以指定PKG的版本\n* 便于稳定地构建\n\n\n最简单的格式:\n```\n{\n    # name的值是`小写的`、`一个词语，不能有空格`、`可以用 . 和 _ `\n    \"name\": \"my-awesome-pkg\",\n    # 格式为`x.x.x`\n    \"version\": \"1.0.0\"\n}\n```\n\n**定义依赖:**\n包含`两种`类型的依赖:\n* dependencies: 用在生产环境的依赖\n* devDependencies: 用在开发环境的依赖\n\n如下所示\n```\n{\n    \"name\": \"my_package\",\n    \"version\": \"1.0.0\",\n    \"dependencies\": {\n        \"my_dep\": \"^1.0.0\"\n    },\n    \"devDependencies\" : {\n        \"my_test_framework\": \"^3.1.0\"\n    }\n}\n```\n\n## 3. 安装/卸载本地模块\n默认安装方式就是本地安装\n```\n# 1. 默认安装\nnpm install PKG_NAME\n## 1.1. 安装prod环境的依赖\nnpm install PKG_NAME --save\n## 1.2. 安装dev环境的依赖\nnpm install PKG_NAME --save-dev\n\n# 2. 卸载\nnpm uninstall PKG_NAME\n## 2.1 卸载prod环境的依赖\nnpm uninstall --save PKG_NAME\n## 2.2 卸载dev环境的依赖\nnpm uninstall --save-dev PKG_NAME\n```\n一旦输入这个命令后，那么，在当前目录下就会创建`node_modules`文件夹，并下载指定模块到这个目录\n\n\n## 4. 安装/卸载全局模块\n参照本地安装的格式，加入`-g`选项即可，如:\n```\nnpm install -g PKG_NAME\n```\n\n## 5. 更新依赖\n进入`package.json`所在目录，输入以下命令即可:\n```\n# 1. 执行更新\nnpm update\n# 2. 测试是否有延迟的信息\nnpm outdated\n```\n\n## 6. 发布Package\n参考 [这里](https://docs.npmjs.com/getting-started/publishing-npm-packages)\n\n## 7. npm配置信息\nnpm可以从`命令行`、`环境变量`以及`npmrc文件`获取配置信息\n\n可以通过以下命令查看配置信息:\n```\n# 1. 列出所有配置信息\nnpm config ls -l\n```\n\n### 7.1 npmrc文件\n有`4`个地方可以包含此文件，优先级`逐渐降低`:\n* 项目内的.npmrc文件\n* 用户级别的.npmrc文件，$HOME/.npmrc\n* 全局.npmrc文件，$PREFIX/etc/.npmrc\n* npm内置.npmrc文件，/path/to/npm/.npmrc\n\n**NOTE:**内容格式都是`KEY = VALUE`形式\n\n配置示例（$HOME/.npmrc）:\n```\n# 1. 配置淘宝npm镜像\nregistry = \"https://registry.npm.taobao.org/\"\n```\n或\n```\nnpm config set registry https://registry.npm.taobao.org\n```","source":"_posts/npm使用.md","raw":"---\ntitle: npm使用\ndate: 2015-09-19 23:00:56\ntags: npm\n---\n\n## 1. 它是什么?\n全称为`Node Package Manager`，大大简化了共享、重构代码的痛点\n[官方介绍](https://docs.npmjs.com/getting-started/what-is-npm)\n\n## 2. package.json\n用来管理本地安装Package的最好方式，可以使用`npm init`来创建, 它有以下作用：\n* 展示你的项目依赖哪些PKG\n* 可以指定PKG的版本\n* 便于稳定地构建\n\n\n最简单的格式:\n```\n{\n    # name的值是`小写的`、`一个词语，不能有空格`、`可以用 . 和 _ `\n    \"name\": \"my-awesome-pkg\",\n    # 格式为`x.x.x`\n    \"version\": \"1.0.0\"\n}\n```\n\n**定义依赖:**\n包含`两种`类型的依赖:\n* dependencies: 用在生产环境的依赖\n* devDependencies: 用在开发环境的依赖\n\n如下所示\n```\n{\n    \"name\": \"my_package\",\n    \"version\": \"1.0.0\",\n    \"dependencies\": {\n        \"my_dep\": \"^1.0.0\"\n    },\n    \"devDependencies\" : {\n        \"my_test_framework\": \"^3.1.0\"\n    }\n}\n```\n\n## 3. 安装/卸载本地模块\n默认安装方式就是本地安装\n```\n# 1. 默认安装\nnpm install PKG_NAME\n## 1.1. 安装prod环境的依赖\nnpm install PKG_NAME --save\n## 1.2. 安装dev环境的依赖\nnpm install PKG_NAME --save-dev\n\n# 2. 卸载\nnpm uninstall PKG_NAME\n## 2.1 卸载prod环境的依赖\nnpm uninstall --save PKG_NAME\n## 2.2 卸载dev环境的依赖\nnpm uninstall --save-dev PKG_NAME\n```\n一旦输入这个命令后，那么，在当前目录下就会创建`node_modules`文件夹，并下载指定模块到这个目录\n\n\n## 4. 安装/卸载全局模块\n参照本地安装的格式，加入`-g`选项即可，如:\n```\nnpm install -g PKG_NAME\n```\n\n## 5. 更新依赖\n进入`package.json`所在目录，输入以下命令即可:\n```\n# 1. 执行更新\nnpm update\n# 2. 测试是否有延迟的信息\nnpm outdated\n```\n\n## 6. 发布Package\n参考 [这里](https://docs.npmjs.com/getting-started/publishing-npm-packages)\n\n## 7. npm配置信息\nnpm可以从`命令行`、`环境变量`以及`npmrc文件`获取配置信息\n\n可以通过以下命令查看配置信息:\n```\n# 1. 列出所有配置信息\nnpm config ls -l\n```\n\n### 7.1 npmrc文件\n有`4`个地方可以包含此文件，优先级`逐渐降低`:\n* 项目内的.npmrc文件\n* 用户级别的.npmrc文件，$HOME/.npmrc\n* 全局.npmrc文件，$PREFIX/etc/.npmrc\n* npm内置.npmrc文件，/path/to/npm/.npmrc\n\n**NOTE:**内容格式都是`KEY = VALUE`形式\n\n配置示例（$HOME/.npmrc）:\n```\n# 1. 配置淘宝npm镜像\nregistry = \"https://registry.npm.taobao.org/\"\n```\n或\n```\nnpm config set registry https://registry.npm.taobao.org\n```","slug":"npm使用","published":1,"updated":"2016-11-25T15:50:59.000Z","_id":"civxx4j22000061s6mgrs5zn9","comments":1,"layout":"post","photos":[],"link":"","content":"<h2 id=\"1-它是什么\"><a href=\"#1-它是什么\" class=\"headerlink\" title=\"1. 它是什么?\"></a>1. 它是什么?</h2><p>全称为<code>Node Package Manager</code>，大大简化了共享、重构代码的痛点<br><a href=\"https://docs.npmjs.com/getting-started/what-is-npm\" target=\"_blank\" rel=\"external\">官方介绍</a></p>\n<h2 id=\"2-package-json\"><a href=\"#2-package-json\" class=\"headerlink\" title=\"2. package.json\"></a>2. package.json</h2><p>用来管理本地安装Package的最好方式，可以使用<code>npm init</code>来创建, 它有以下作用：</p>\n<ul>\n<li>展示你的项目依赖哪些PKG</li>\n<li>可以指定PKG的版本</li>\n<li>便于稳定地构建</li>\n</ul>\n<p>最简单的格式:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">&#123;</div><div class=\"line\">    # name的值是`小写的`、`一个词语，不能有空格`、`可以用 . 和 _ `</div><div class=\"line\">    &quot;name&quot;: &quot;my-awesome-pkg&quot;,</div><div class=\"line\">    # 格式为`x.x.x`</div><div class=\"line\">    &quot;version&quot;: &quot;1.0.0&quot;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p><strong>定义依赖:</strong><br>包含<code>两种</code>类型的依赖:</p>\n<ul>\n<li>dependencies: 用在生产环境的依赖</li>\n<li>devDependencies: 用在开发环境的依赖</li>\n</ul>\n<p>如下所示<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\">&#123;</div><div class=\"line\">    &quot;name&quot;: &quot;my_package&quot;,</div><div class=\"line\">    &quot;version&quot;: &quot;1.0.0&quot;,</div><div class=\"line\">    &quot;dependencies&quot;: &#123;</div><div class=\"line\">        &quot;my_dep&quot;: &quot;^1.0.0&quot;</div><div class=\"line\">    &#125;,</div><div class=\"line\">    &quot;devDependencies&quot; : &#123;</div><div class=\"line\">        &quot;my_test_framework&quot;: &quot;^3.1.0&quot;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<h2 id=\"3-安装-卸载本地模块\"><a href=\"#3-安装-卸载本地模块\" class=\"headerlink\" title=\"3. 安装/卸载本地模块\"></a>3. 安装/卸载本地模块</h2><p>默认安装方式就是本地安装<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\"># 1. 默认安装</div><div class=\"line\">npm install PKG_NAME</div><div class=\"line\">## 1.1. 安装prod环境的依赖</div><div class=\"line\">npm install PKG_NAME --save</div><div class=\"line\">## 1.2. 安装dev环境的依赖</div><div class=\"line\">npm install PKG_NAME --save-dev</div><div class=\"line\"></div><div class=\"line\"># 2. 卸载</div><div class=\"line\">npm uninstall PKG_NAME</div><div class=\"line\">## 2.1 卸载prod环境的依赖</div><div class=\"line\">npm uninstall --save PKG_NAME</div><div class=\"line\">## 2.2 卸载dev环境的依赖</div><div class=\"line\">npm uninstall --save-dev PKG_NAME</div></pre></td></tr></table></figure></p>\n<p>一旦输入这个命令后，那么，在当前目录下就会创建<code>node_modules</code>文件夹，并下载指定模块到这个目录</p>\n<h2 id=\"4-安装-卸载全局模块\"><a href=\"#4-安装-卸载全局模块\" class=\"headerlink\" title=\"4. 安装/卸载全局模块\"></a>4. 安装/卸载全局模块</h2><p>参照本地安装的格式，加入<code>-g</code>选项即可，如:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm install -g PKG_NAME</div></pre></td></tr></table></figure></p>\n<h2 id=\"5-更新依赖\"><a href=\"#5-更新依赖\" class=\"headerlink\" title=\"5. 更新依赖\"></a>5. 更新依赖</h2><p>进入<code>package.json</code>所在目录，输入以下命令即可:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"># 1. 执行更新</div><div class=\"line\">npm update</div><div class=\"line\"># 2. 测试是否有延迟的信息</div><div class=\"line\">npm outdated</div></pre></td></tr></table></figure></p>\n<h2 id=\"6-发布Package\"><a href=\"#6-发布Package\" class=\"headerlink\" title=\"6. 发布Package\"></a>6. 发布Package</h2><p>参考 <a href=\"https://docs.npmjs.com/getting-started/publishing-npm-packages\" target=\"_blank\" rel=\"external\">这里</a></p>\n<h2 id=\"7-npm配置信息\"><a href=\"#7-npm配置信息\" class=\"headerlink\" title=\"7. npm配置信息\"></a>7. npm配置信息</h2><p>npm可以从<code>命令行</code>、<code>环境变量</code>以及<code>npmrc文件</code>获取配置信息</p>\n<p>可以通过以下命令查看配置信息:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"># 1. 列出所有配置信息</div><div class=\"line\">npm config ls -l</div></pre></td></tr></table></figure></p>\n<h3 id=\"7-1-npmrc文件\"><a href=\"#7-1-npmrc文件\" class=\"headerlink\" title=\"7.1 npmrc文件\"></a>7.1 npmrc文件</h3><p>有<code>4</code>个地方可以包含此文件，优先级<code>逐渐降低</code>:</p>\n<ul>\n<li>项目内的.npmrc文件</li>\n<li>用户级别的.npmrc文件，$HOME/.npmrc</li>\n<li>全局.npmrc文件，$PREFIX/etc/.npmrc</li>\n<li>npm内置.npmrc文件，/path/to/npm/.npmrc</li>\n</ul>\n<p><strong>NOTE:</strong>内容格式都是<code>KEY = VALUE</code>形式</p>\n<p>配置示例（$HOME/.npmrc）:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"># 1. 配置淘宝npm镜像</div><div class=\"line\">registry = &quot;https://registry.npm.taobao.org/&quot;</div></pre></td></tr></table></figure></p>\n<p>或<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm config set registry https://registry.npm.taobao.org</div></pre></td></tr></table></figure></p>\n","excerpt":"","more":"<h2 id=\"1-它是什么\"><a href=\"#1-它是什么\" class=\"headerlink\" title=\"1. 它是什么?\"></a>1. 它是什么?</h2><p>全称为<code>Node Package Manager</code>，大大简化了共享、重构代码的痛点<br><a href=\"https://docs.npmjs.com/getting-started/what-is-npm\">官方介绍</a></p>\n<h2 id=\"2-package-json\"><a href=\"#2-package-json\" class=\"headerlink\" title=\"2. package.json\"></a>2. package.json</h2><p>用来管理本地安装Package的最好方式，可以使用<code>npm init</code>来创建, 它有以下作用：</p>\n<ul>\n<li>展示你的项目依赖哪些PKG</li>\n<li>可以指定PKG的版本</li>\n<li>便于稳定地构建</li>\n</ul>\n<p>最简单的格式:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">&#123;</div><div class=\"line\">    # name的值是`小写的`、`一个词语，不能有空格`、`可以用 . 和 _ `</div><div class=\"line\">    &quot;name&quot;: &quot;my-awesome-pkg&quot;,</div><div class=\"line\">    # 格式为`x.x.x`</div><div class=\"line\">    &quot;version&quot;: &quot;1.0.0&quot;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p><strong>定义依赖:</strong><br>包含<code>两种</code>类型的依赖:</p>\n<ul>\n<li>dependencies: 用在生产环境的依赖</li>\n<li>devDependencies: 用在开发环境的依赖</li>\n</ul>\n<p>如下所示<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\">&#123;</div><div class=\"line\">    &quot;name&quot;: &quot;my_package&quot;,</div><div class=\"line\">    &quot;version&quot;: &quot;1.0.0&quot;,</div><div class=\"line\">    &quot;dependencies&quot;: &#123;</div><div class=\"line\">        &quot;my_dep&quot;: &quot;^1.0.0&quot;</div><div class=\"line\">    &#125;,</div><div class=\"line\">    &quot;devDependencies&quot; : &#123;</div><div class=\"line\">        &quot;my_test_framework&quot;: &quot;^3.1.0&quot;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<h2 id=\"3-安装-卸载本地模块\"><a href=\"#3-安装-卸载本地模块\" class=\"headerlink\" title=\"3. 安装/卸载本地模块\"></a>3. 安装/卸载本地模块</h2><p>默认安装方式就是本地安装<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\"># 1. 默认安装</div><div class=\"line\">npm install PKG_NAME</div><div class=\"line\">## 1.1. 安装prod环境的依赖</div><div class=\"line\">npm install PKG_NAME --save</div><div class=\"line\">## 1.2. 安装dev环境的依赖</div><div class=\"line\">npm install PKG_NAME --save-dev</div><div class=\"line\"></div><div class=\"line\"># 2. 卸载</div><div class=\"line\">npm uninstall PKG_NAME</div><div class=\"line\">## 2.1 卸载prod环境的依赖</div><div class=\"line\">npm uninstall --save PKG_NAME</div><div class=\"line\">## 2.2 卸载dev环境的依赖</div><div class=\"line\">npm uninstall --save-dev PKG_NAME</div></pre></td></tr></table></figure></p>\n<p>一旦输入这个命令后，那么，在当前目录下就会创建<code>node_modules</code>文件夹，并下载指定模块到这个目录</p>\n<h2 id=\"4-安装-卸载全局模块\"><a href=\"#4-安装-卸载全局模块\" class=\"headerlink\" title=\"4. 安装/卸载全局模块\"></a>4. 安装/卸载全局模块</h2><p>参照本地安装的格式，加入<code>-g</code>选项即可，如:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm install -g PKG_NAME</div></pre></td></tr></table></figure></p>\n<h2 id=\"5-更新依赖\"><a href=\"#5-更新依赖\" class=\"headerlink\" title=\"5. 更新依赖\"></a>5. 更新依赖</h2><p>进入<code>package.json</code>所在目录，输入以下命令即可:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"># 1. 执行更新</div><div class=\"line\">npm update</div><div class=\"line\"># 2. 测试是否有延迟的信息</div><div class=\"line\">npm outdated</div></pre></td></tr></table></figure></p>\n<h2 id=\"6-发布Package\"><a href=\"#6-发布Package\" class=\"headerlink\" title=\"6. 发布Package\"></a>6. 发布Package</h2><p>参考 <a href=\"https://docs.npmjs.com/getting-started/publishing-npm-packages\">这里</a></p>\n<h2 id=\"7-npm配置信息\"><a href=\"#7-npm配置信息\" class=\"headerlink\" title=\"7. npm配置信息\"></a>7. npm配置信息</h2><p>npm可以从<code>命令行</code>、<code>环境变量</code>以及<code>npmrc文件</code>获取配置信息</p>\n<p>可以通过以下命令查看配置信息:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"># 1. 列出所有配置信息</div><div class=\"line\">npm config ls -l</div></pre></td></tr></table></figure></p>\n<h3 id=\"7-1-npmrc文件\"><a href=\"#7-1-npmrc文件\" class=\"headerlink\" title=\"7.1 npmrc文件\"></a>7.1 npmrc文件</h3><p>有<code>4</code>个地方可以包含此文件，优先级<code>逐渐降低</code>:</p>\n<ul>\n<li>项目内的.npmrc文件</li>\n<li>用户级别的.npmrc文件，$HOME/.npmrc</li>\n<li>全局.npmrc文件，$PREFIX/etc/.npmrc</li>\n<li>npm内置.npmrc文件，/path/to/npm/.npmrc</li>\n</ul>\n<p><strong>NOTE:</strong>内容格式都是<code>KEY = VALUE</code>形式</p>\n<p>配置示例（$HOME/.npmrc）:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"># 1. 配置淘宝npm镜像</div><div class=\"line\">registry = &quot;https://registry.npm.taobao.org/&quot;</div></pre></td></tr></table></figure></p>\n<p>或<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm config set registry https://registry.npm.taobao.org</div></pre></td></tr></table></figure></p>\n"},{"title":"文本","date":"2015-07-04T13:00:02.000Z","_content":"\n# font\n\n综合写法 -> font:  `[<font-style> || <font-weight>]?<font-size>[/<line-height>]?<font-family>`\n\n+ font-size:  `<length> | <percentage> | <absolute-size> | <relative-size>`\n\n+ font-family:  `[<family-name>|<generic-family>]#`\n\n+ font-weigth\n\n+ font-style\n\n+ line-height\n\n    - percentage：先计算后继承\n\n    - number：先继承后计算\n\n# color\n\n+ 颜色名：`color: red`\n\n+ 颜色16进制编码：` color: #ff0000`\n\n+ rgb: color: ` rgb(255,0,0)`\n\n+ rgba:  `color:rgb(255,0,0,1)`\n\n+ transparent == `color: rgba(0,0,0,0)`\n\n+  `color: inherit//强制继承父元素的值`\n\n# 对齐方式\n\n+ text-align: `left | center | right | justify`\n\n    - justify:  行两端对齐\n\n+ vertical-align: `baseline|sub|super|middle|top|text-top`\n\n+  text-indent: `<length>|<percentage>`\n\n常用于段落缩进：text-indent: 2em;\n\n **当text-indent设置为很大的负值，文字就能被隐藏，这是前端常用来做seo的手段，希望代码里有这些文字，但又不被显示， `text-indent:-99999999px` 或`text-indent: -10000%`**\n\n# 格式处理\n\n+ white-space: ``\n\n+ word-wrap: `norma l | break-word`\n\n+ word-break: `norma l | keep-all | break-all`\n\n# 文本修饰\n\n+ text-shadow: `none | [<length>{2,3} && <color>?]#`\n\n+ text-decoration: `none | [underline || overline || line-through]`\n\n# 高级设置\n\n+ text-overflow: `clip | ellipsis`\n\n一个常见用例就是超出部分用...表示\n\n```css\n\nwhite-space: nowrap;//不换行\n\noverflow: hidden;\n\ntext-overflow: ellipsis;\n\n```\n\n+ cursor\n\ncursor:`[<uri>,]*[auto|default|none|help|pointer|zoom-in|zoom-out|move]`\n\n`cursor:url(xxx.png),point;//当图片加载不成功，就使用后来指定的光标样式`","source":"_posts/文本.md","raw":"---\ntitle: 文本\ndate: 2015-07-04 21:00:02\ntags: css\n---\n\n# font\n\n综合写法 -> font:  `[<font-style> || <font-weight>]?<font-size>[/<line-height>]?<font-family>`\n\n+ font-size:  `<length> | <percentage> | <absolute-size> | <relative-size>`\n\n+ font-family:  `[<family-name>|<generic-family>]#`\n\n+ font-weigth\n\n+ font-style\n\n+ line-height\n\n    - percentage：先计算后继承\n\n    - number：先继承后计算\n\n# color\n\n+ 颜色名：`color: red`\n\n+ 颜色16进制编码：` color: #ff0000`\n\n+ rgb: color: ` rgb(255,0,0)`\n\n+ rgba:  `color:rgb(255,0,0,1)`\n\n+ transparent == `color: rgba(0,0,0,0)`\n\n+  `color: inherit//强制继承父元素的值`\n\n# 对齐方式\n\n+ text-align: `left | center | right | justify`\n\n    - justify:  行两端对齐\n\n+ vertical-align: `baseline|sub|super|middle|top|text-top`\n\n+  text-indent: `<length>|<percentage>`\n\n常用于段落缩进：text-indent: 2em;\n\n **当text-indent设置为很大的负值，文字就能被隐藏，这是前端常用来做seo的手段，希望代码里有这些文字，但又不被显示， `text-indent:-99999999px` 或`text-indent: -10000%`**\n\n# 格式处理\n\n+ white-space: ``\n\n+ word-wrap: `norma l | break-word`\n\n+ word-break: `norma l | keep-all | break-all`\n\n# 文本修饰\n\n+ text-shadow: `none | [<length>{2,3} && <color>?]#`\n\n+ text-decoration: `none | [underline || overline || line-through]`\n\n# 高级设置\n\n+ text-overflow: `clip | ellipsis`\n\n一个常见用例就是超出部分用...表示\n\n```css\n\nwhite-space: nowrap;//不换行\n\noverflow: hidden;\n\ntext-overflow: ellipsis;\n\n```\n\n+ cursor\n\ncursor:`[<uri>,]*[auto|default|none|help|pointer|zoom-in|zoom-out|move]`\n\n`cursor:url(xxx.png),point;//当图片加载不成功，就使用后来指定的光标样式`","slug":"文本","published":1,"updated":"2016-11-25T16:15:10.000Z","_id":"civxyr9c0000661s6te5fuoj6","comments":1,"layout":"post","photos":[],"link":"","content":"<h1 id=\"font\"><a href=\"#font\" class=\"headerlink\" title=\"font\"></a>font</h1><p>综合写法 -&gt; font:  <code>[&lt;font-style&gt; || &lt;font-weight&gt;]?&lt;font-size&gt;[/&lt;line-height&gt;]?&lt;font-family&gt;</code></p>\n<ul>\n<li><p>font-size:  <code>&lt;length&gt; | &lt;percentage&gt; | &lt;absolute-size&gt; | &lt;relative-size&gt;</code></p>\n</li>\n<li><p>font-family:  <code>[&lt;family-name&gt;|&lt;generic-family&gt;]#</code></p>\n</li>\n<li><p>font-weigth</p>\n</li>\n<li><p>font-style</p>\n</li>\n<li><p>line-height</p>\n<ul>\n<li><p>percentage：先计算后继承</p>\n</li>\n<li><p>number：先继承后计算</p>\n</li>\n</ul>\n</li>\n</ul>\n<h1 id=\"color\"><a href=\"#color\" class=\"headerlink\" title=\"color\"></a>color</h1><ul>\n<li><p>颜色名：<code>color: red</code></p>\n</li>\n<li><p>颜色16进制编码：<code>color: #ff0000</code></p>\n</li>\n<li><p>rgb: color: <code>rgb(255,0,0)</code></p>\n</li>\n<li><p>rgba:  <code>color:rgb(255,0,0,1)</code></p>\n</li>\n<li><p>transparent == <code>color: rgba(0,0,0,0)</code></p>\n</li>\n<li><p><code>color: inherit//强制继承父元素的值</code></p>\n</li>\n</ul>\n<h1 id=\"对齐方式\"><a href=\"#对齐方式\" class=\"headerlink\" title=\"对齐方式\"></a>对齐方式</h1><ul>\n<li><p>text-align: <code>left | center | right | justify</code></p>\n<ul>\n<li>justify:  行两端对齐</li>\n</ul>\n</li>\n<li><p>vertical-align: <code>baseline|sub|super|middle|top|text-top</code></p>\n</li>\n<li><p>text-indent: <code>&lt;length&gt;|&lt;percentage&gt;</code></p>\n</li>\n</ul>\n<p>常用于段落缩进：text-indent: 2em;</p>\n<p> <strong>当text-indent设置为很大的负值，文字就能被隐藏，这是前端常用来做seo的手段，希望代码里有这些文字，但又不被显示， <code>text-indent:-99999999px</code> 或<code>text-indent: -10000%</code></strong></p>\n<h1 id=\"格式处理\"><a href=\"#格式处理\" class=\"headerlink\" title=\"格式处理\"></a>格式处理</h1><ul>\n<li><p>white-space: ``</p>\n</li>\n<li><p>word-wrap: <code>norma l | break-word</code></p>\n</li>\n<li><p>word-break: <code>norma l | keep-all | break-all</code></p>\n</li>\n</ul>\n<h1 id=\"文本修饰\"><a href=\"#文本修饰\" class=\"headerlink\" title=\"文本修饰\"></a>文本修饰</h1><ul>\n<li><p>text-shadow: <code>none | [&lt;length&gt;{2,3} &amp;&amp; &lt;color&gt;?]#</code></p>\n</li>\n<li><p>text-decoration: <code>none | [underline || overline || line-through]</code></p>\n</li>\n</ul>\n<h1 id=\"高级设置\"><a href=\"#高级设置\" class=\"headerlink\" title=\"高级设置\"></a>高级设置</h1><ul>\n<li>text-overflow: <code>clip | ellipsis</code></li>\n</ul>\n<p>一个常见用例就是超出部分用…表示</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\">white-space: nowrap;//不换行</div><div class=\"line\"></div><div class=\"line\">overflow: hidden;</div><div class=\"line\"></div><div class=\"line\">text-overflow: ellipsis;</div></pre></td></tr></table></figure>\n<ul>\n<li>cursor</li>\n</ul>\n<p>cursor:<code>[&lt;uri&gt;,]*[auto|default|none|help|pointer|zoom-in|zoom-out|move]</code></p>\n<p><code>cursor:url(xxx.png),point;//当图片加载不成功，就使用后来指定的光标样式</code></p>\n","excerpt":"","more":"<h1 id=\"font\"><a href=\"#font\" class=\"headerlink\" title=\"font\"></a>font</h1><p>综合写法 -&gt; font:  <code>[&lt;font-style&gt; || &lt;font-weight&gt;]?&lt;font-size&gt;[/&lt;line-height&gt;]?&lt;font-family&gt;</code></p>\n<ul>\n<li><p>font-size:  <code>&lt;length&gt; | &lt;percentage&gt; | &lt;absolute-size&gt; | &lt;relative-size&gt;</code></p>\n</li>\n<li><p>font-family:  <code>[&lt;family-name&gt;|&lt;generic-family&gt;]#</code></p>\n</li>\n<li><p>font-weigth</p>\n</li>\n<li><p>font-style</p>\n</li>\n<li><p>line-height</p>\n<ul>\n<li><p>percentage：先计算后继承</p>\n</li>\n<li><p>number：先继承后计算</p>\n</li>\n</ul>\n</li>\n</ul>\n<h1 id=\"color\"><a href=\"#color\" class=\"headerlink\" title=\"color\"></a>color</h1><ul>\n<li><p>颜色名：<code>color: red</code></p>\n</li>\n<li><p>颜色16进制编码：<code>color: #ff0000</code></p>\n</li>\n<li><p>rgb: color: <code>rgb(255,0,0)</code></p>\n</li>\n<li><p>rgba:  <code>color:rgb(255,0,0,1)</code></p>\n</li>\n<li><p>transparent == <code>color: rgba(0,0,0,0)</code></p>\n</li>\n<li><p><code>color: inherit//强制继承父元素的值</code></p>\n</li>\n</ul>\n<h1 id=\"对齐方式\"><a href=\"#对齐方式\" class=\"headerlink\" title=\"对齐方式\"></a>对齐方式</h1><ul>\n<li><p>text-align: <code>left | center | right | justify</code></p>\n<ul>\n<li>justify:  行两端对齐</li>\n</ul>\n</li>\n<li><p>vertical-align: <code>baseline|sub|super|middle|top|text-top</code></p>\n</li>\n<li><p>text-indent: <code>&lt;length&gt;|&lt;percentage&gt;</code></p>\n</li>\n</ul>\n<p>常用于段落缩进：text-indent: 2em;</p>\n<p> <strong>当text-indent设置为很大的负值，文字就能被隐藏，这是前端常用来做seo的手段，希望代码里有这些文字，但又不被显示， <code>text-indent:-99999999px</code> 或<code>text-indent: -10000%</code></strong></p>\n<h1 id=\"格式处理\"><a href=\"#格式处理\" class=\"headerlink\" title=\"格式处理\"></a>格式处理</h1><ul>\n<li><p>white-space: ``</p>\n</li>\n<li><p>word-wrap: <code>norma l | break-word</code></p>\n</li>\n<li><p>word-break: <code>norma l | keep-all | break-all</code></p>\n</li>\n</ul>\n<h1 id=\"文本修饰\"><a href=\"#文本修饰\" class=\"headerlink\" title=\"文本修饰\"></a>文本修饰</h1><ul>\n<li><p>text-shadow: <code>none | [&lt;length&gt;{2,3} &amp;&amp; &lt;color&gt;?]#</code></p>\n</li>\n<li><p>text-decoration: <code>none | [underline || overline || line-through]</code></p>\n</li>\n</ul>\n<h1 id=\"高级设置\"><a href=\"#高级设置\" class=\"headerlink\" title=\"高级设置\"></a>高级设置</h1><ul>\n<li>text-overflow: <code>clip | ellipsis</code></li>\n</ul>\n<p>一个常见用例就是超出部分用…表示</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\">white-space: nowrap;//不换行</div><div class=\"line\"></div><div class=\"line\">overflow: hidden;</div><div class=\"line\"></div><div class=\"line\">text-overflow: ellipsis;</div></pre></td></tr></table></figure>\n<ul>\n<li>cursor</li>\n</ul>\n<p>cursor:<code>[&lt;uri&gt;,]*[auto|default|none|help|pointer|zoom-in|zoom-out|move]</code></p>\n<p><code>cursor:url(xxx.png),point;//当图片加载不成功，就使用后来指定的光标样式</code></p>\n"},{"title":"盒模型","date":"2015-07-10T14:25:32.000Z","_content":"\n相关内容：width,height, padding,margin,border,border-radius,overflow,box-sizing,box-shadow,outline\n\n## border-radius\n\nborder-radius: `[<length>|<percentage>]{1,4}[/[<length>|<percentage>]{1,4}]?`\n\n\n例：`border-radius: 0px 5px 10px 15px/20px 15px 10px 5px`，前四个值是x方向的半径，后四个值是y方向的半径\n\n不用设置border此样式也能生效\n\n`border-radius: 50%`: 结果是一个圆，因为每个角的垂直半径和水平半径都是50%；\n\n## overflow\n\noverflow: `visiable|hidden|scroll|auto`\n\noverflow-x:\n\noverflow-y:\n\n## box-sizing（设置width，height的区域）\n\nbox-sizing: `content-box|border-box|inherit`\n\n默认值是：content-box\n\ncontent-box:  表示宽高，padding，border\n\nborder-box: 表示只有宽高\n\n## box-shadow\n\n`box-shadow: none|<shadow>[,<shadow>]*`\n\n`<shadow>:inset?&&<length>{2,4}&&color`\n\n\n注：阴影不占空间\n\n## outline\n\n`outline:[<outline-width>||<outline-style>||<outline-color>]|inherit`\n\n 与border的语法相似，除了不能是1～4个，并且（1）不占空间，（2）在border外","source":"_posts/盒模型.md","raw":"---\ntitle: 盒模型\ndate: 2015-07-10 22:25:32\ntags: css\n---\n\n相关内容：width,height, padding,margin,border,border-radius,overflow,box-sizing,box-shadow,outline\n\n## border-radius\n\nborder-radius: `[<length>|<percentage>]{1,4}[/[<length>|<percentage>]{1,4}]?`\n\n\n例：`border-radius: 0px 5px 10px 15px/20px 15px 10px 5px`，前四个值是x方向的半径，后四个值是y方向的半径\n\n不用设置border此样式也能生效\n\n`border-radius: 50%`: 结果是一个圆，因为每个角的垂直半径和水平半径都是50%；\n\n## overflow\n\noverflow: `visiable|hidden|scroll|auto`\n\noverflow-x:\n\noverflow-y:\n\n## box-sizing（设置width，height的区域）\n\nbox-sizing: `content-box|border-box|inherit`\n\n默认值是：content-box\n\ncontent-box:  表示宽高，padding，border\n\nborder-box: 表示只有宽高\n\n## box-shadow\n\n`box-shadow: none|<shadow>[,<shadow>]*`\n\n`<shadow>:inset?&&<length>{2,4}&&color`\n\n\n注：阴影不占空间\n\n## outline\n\n`outline:[<outline-width>||<outline-style>||<outline-color>]|inherit`\n\n 与border的语法相似，除了不能是1～4个，并且（1）不占空间，（2）在border外","slug":"盒模型","published":1,"updated":"2017-02-10T05:56:03.000Z","_id":"civxz0nvk000c61s68ncm20bb","comments":1,"layout":"post","photos":[],"link":"","content":"<p>相关内容：width,height, padding,margin,border,border-radius,overflow,box-sizing,box-shadow,outline</p>\n<h2 id=\"border-radius\"><a href=\"#border-radius\" class=\"headerlink\" title=\"border-radius\"></a>border-radius</h2><p>border-radius: <code>[&lt;length&gt;|&lt;percentage&gt;]{1,4}[/[&lt;length&gt;|&lt;percentage&gt;]{1,4}]?</code></p>\n<p>例：<code>border-radius: 0px 5px 10px 15px/20px 15px 10px 5px</code>，前四个值是x方向的半径，后四个值是y方向的半径</p>\n<p>不用设置border此样式也能生效</p>\n<p><code>border-radius: 50%</code>: 结果是一个圆，因为每个角的垂直半径和水平半径都是50%；</p>\n<h2 id=\"overflow\"><a href=\"#overflow\" class=\"headerlink\" title=\"overflow\"></a>overflow</h2><p>overflow: <code>visiable|hidden|scroll|auto</code></p>\n<p>overflow-x:</p>\n<p>overflow-y:</p>\n<h2 id=\"box-sizing（设置width，height的区域）\"><a href=\"#box-sizing（设置width，height的区域）\" class=\"headerlink\" title=\"box-sizing（设置width，height的区域）\"></a>box-sizing（设置width，height的区域）</h2><p>box-sizing: <code>content-box|border-box|inherit</code></p>\n<p>默认值是：content-box</p>\n<p>content-box:  表示宽高，padding，border</p>\n<p>border-box: 表示只有宽高</p>\n<h2 id=\"box-shadow\"><a href=\"#box-shadow\" class=\"headerlink\" title=\"box-shadow\"></a>box-shadow</h2><p><code>box-shadow: none|&lt;shadow&gt;[,&lt;shadow&gt;]*</code></p>\n<p><code>&lt;shadow&gt;:inset?&amp;&amp;&lt;length&gt;{2,4}&amp;&amp;color</code></p>\n<p>注：阴影不占空间</p>\n<h2 id=\"outline\"><a href=\"#outline\" class=\"headerlink\" title=\"outline\"></a>outline</h2><p><code>outline:[&lt;outline-width&gt;||&lt;outline-style&gt;||&lt;outline-color&gt;]|inherit</code></p>\n<p> 与border的语法相似，除了不能是1～4个，并且（1）不占空间，（2）在border外</p>\n","excerpt":"","more":"<p>相关内容：width,height, padding,margin,border,border-radius,overflow,box-sizing,box-shadow,outline</p>\n<h2 id=\"border-radius\"><a href=\"#border-radius\" class=\"headerlink\" title=\"border-radius\"></a>border-radius</h2><p>border-radius: <code>[&lt;length&gt;|&lt;percentage&gt;]{1,4}[/[&lt;length&gt;|&lt;percentage&gt;]{1,4}]?</code></p>\n<p>例：<code>border-radius: 0px 5px 10px 15px/20px 15px 10px 5px</code>，前四个值是x方向的半径，后四个值是y方向的半径</p>\n<p>不用设置border此样式也能生效</p>\n<p><code>border-radius: 50%</code>: 结果是一个圆，因为每个角的垂直半径和水平半径都是50%；</p>\n<h2 id=\"overflow\"><a href=\"#overflow\" class=\"headerlink\" title=\"overflow\"></a>overflow</h2><p>overflow: <code>visiable|hidden|scroll|auto</code></p>\n<p>overflow-x:</p>\n<p>overflow-y:</p>\n<h2 id=\"box-sizing（设置width，height的区域）\"><a href=\"#box-sizing（设置width，height的区域）\" class=\"headerlink\" title=\"box-sizing（设置width，height的区域）\"></a>box-sizing（设置width，height的区域）</h2><p>box-sizing: <code>content-box|border-box|inherit</code></p>\n<p>默认值是：content-box</p>\n<p>content-box:  表示宽高，padding，border</p>\n<p>border-box: 表示只有宽高</p>\n<h2 id=\"box-shadow\"><a href=\"#box-shadow\" class=\"headerlink\" title=\"box-shadow\"></a>box-shadow</h2><p><code>box-shadow: none|&lt;shadow&gt;[,&lt;shadow&gt;]*</code></p>\n<p><code>&lt;shadow&gt;:inset?&amp;&amp;&lt;length&gt;{2,4}&amp;&amp;color</code></p>\n<p>注：阴影不占空间</p>\n<h2 id=\"outline\"><a href=\"#outline\" class=\"headerlink\" title=\"outline\"></a>outline</h2><p><code>outline:[&lt;outline-width&gt;||&lt;outline-style&gt;||&lt;outline-color&gt;]|inherit</code></p>\n<p> 与border的语法相似，除了不能是1～4个，并且（1）不占空间，（2）在border外</p>\n"},{"title":"基本语法","date":"2015-07-11T14:29:56.000Z","_content":"\n# 直接量\n\n```\n\n1.2\n\n\"hello world\"\n\ntrue/fasle\n\nnull\n\n[1,2,3]\n\n{name: 'js'}\n\n...\n\n```\n\n# 变量\n\n```js\n\nvar age;\n\n var age,name;\n\n var age =18;\n\n```\n\n# 标识符\n\n+ 命名要求\n\n    - 以字母、下划线或者美元符（$）开头\n\n    - 由字母、下划线或者美元符（$）和数字组成\n\n+\n\n+ 范例\n\n```\n\n//正确\n\nvar age;\n\nvar _age;\n\nvar $age;\n\nvar _age18;\n\nfunction $age_()\n\n```\n\n#  关键字和保留字\n\n# 语句\n\n+ 以分号结尾，但不是必须的\n\n# 注释\n\n+ 单行注释\n\n    - //\n\n+ 多行注释\n\n    - 以 /*开头，*/结尾\n\n    - 不可嵌套\n\n","source":"_posts/基本语法.md","raw":"---\ntitle: 基本语法\ndate: 2015-07-11 22:29:56\ntags: js\n---\n\n# 直接量\n\n```\n\n1.2\n\n\"hello world\"\n\ntrue/fasle\n\nnull\n\n[1,2,3]\n\n{name: 'js'}\n\n...\n\n```\n\n# 变量\n\n```js\n\nvar age;\n\n var age,name;\n\n var age =18;\n\n```\n\n# 标识符\n\n+ 命名要求\n\n    - 以字母、下划线或者美元符（$）开头\n\n    - 由字母、下划线或者美元符（$）和数字组成\n\n+\n\n+ 范例\n\n```\n\n//正确\n\nvar age;\n\nvar _age;\n\nvar $age;\n\nvar _age18;\n\nfunction $age_()\n\n```\n\n#  关键字和保留字\n\n# 语句\n\n+ 以分号结尾，但不是必须的\n\n# 注释\n\n+ 单行注释\n\n    - //\n\n+ 多行注释\n\n    - 以 /*开头，*/结尾\n\n    - 不可嵌套\n\n","slug":"基本语法","published":1,"updated":"2016-11-25T16:05:06.000Z","_id":"civxz23zw000e61s6ouur1prf","comments":1,"layout":"post","photos":[],"link":"","content":"<h1 id=\"直接量\"><a href=\"#直接量\" class=\"headerlink\" title=\"直接量\"></a>直接量</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\">1.2</div><div class=\"line\"></div><div class=\"line\">&quot;hello world&quot;</div><div class=\"line\"></div><div class=\"line\">true/fasle</div><div class=\"line\"></div><div class=\"line\">null</div><div class=\"line\"></div><div class=\"line\">[1,2,3]</div><div class=\"line\"></div><div class=\"line\">&#123;name: &apos;js&apos;&#125;</div><div class=\"line\"></div><div class=\"line\">...</div></pre></td></tr></table></figure>\n<h1 id=\"变量\"><a href=\"#变量\" class=\"headerlink\" title=\"变量\"></a>变量</h1><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">var</span> age;</div><div class=\"line\"></div><div class=\"line\"> <span class=\"keyword\">var</span> age,name;</div><div class=\"line\"></div><div class=\"line\"> <span class=\"keyword\">var</span> age =<span class=\"number\">18</span>;</div></pre></td></tr></table></figure>\n<h1 id=\"标识符\"><a href=\"#标识符\" class=\"headerlink\" title=\"标识符\"></a>标识符</h1><ul>\n<li><p>命名要求</p>\n<ul>\n<li><p>以字母、下划线或者美元符（$）开头</p>\n</li>\n<li><p>由字母、下划线或者美元符（$）和数字组成</p>\n</li>\n</ul>\n</li>\n</ul>\n<p>+</p>\n<ul>\n<li>范例</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\">//正确</div><div class=\"line\"></div><div class=\"line\">var age;</div><div class=\"line\"></div><div class=\"line\">var _age;</div><div class=\"line\"></div><div class=\"line\">var $age;</div><div class=\"line\"></div><div class=\"line\">var _age18;</div><div class=\"line\"></div><div class=\"line\">function $age_()</div></pre></td></tr></table></figure>\n<h1 id=\"关键字和保留字\"><a href=\"#关键字和保留字\" class=\"headerlink\" title=\"关键字和保留字\"></a>关键字和保留字</h1><h1 id=\"语句\"><a href=\"#语句\" class=\"headerlink\" title=\"语句\"></a>语句</h1><ul>\n<li>以分号结尾，但不是必须的</li>\n</ul>\n<h1 id=\"注释\"><a href=\"#注释\" class=\"headerlink\" title=\"注释\"></a>注释</h1><ul>\n<li><p>单行注释</p>\n<ul>\n<li>//</li>\n</ul>\n</li>\n<li><p>多行注释</p>\n<ul>\n<li><p>以 /<em>开头，</em>/结尾</p>\n</li>\n<li><p>不可嵌套</p>\n</li>\n</ul>\n</li>\n</ul>\n","excerpt":"","more":"<h1 id=\"直接量\"><a href=\"#直接量\" class=\"headerlink\" title=\"直接量\"></a>直接量</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\">1.2</div><div class=\"line\"></div><div class=\"line\">&quot;hello world&quot;</div><div class=\"line\"></div><div class=\"line\">true/fasle</div><div class=\"line\"></div><div class=\"line\">null</div><div class=\"line\"></div><div class=\"line\">[1,2,3]</div><div class=\"line\"></div><div class=\"line\">&#123;name: &apos;js&apos;&#125;</div><div class=\"line\"></div><div class=\"line\">...</div></pre></td></tr></table></figure>\n<h1 id=\"变量\"><a href=\"#变量\" class=\"headerlink\" title=\"变量\"></a>变量</h1><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">var</span> age;</div><div class=\"line\"></div><div class=\"line\"> <span class=\"keyword\">var</span> age,name;</div><div class=\"line\"></div><div class=\"line\"> <span class=\"keyword\">var</span> age =<span class=\"number\">18</span>;</div></pre></td></tr></table></figure>\n<h1 id=\"标识符\"><a href=\"#标识符\" class=\"headerlink\" title=\"标识符\"></a>标识符</h1><ul>\n<li><p>命名要求</p>\n<ul>\n<li><p>以字母、下划线或者美元符（$）开头</p>\n</li>\n<li><p>由字母、下划线或者美元符（$）和数字组成</p>\n</li>\n</ul>\n</li>\n</ul>\n<p>+</p>\n<ul>\n<li>范例</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\">//正确</div><div class=\"line\"></div><div class=\"line\">var age;</div><div class=\"line\"></div><div class=\"line\">var _age;</div><div class=\"line\"></div><div class=\"line\">var $age;</div><div class=\"line\"></div><div class=\"line\">var _age18;</div><div class=\"line\"></div><div class=\"line\">function $age_()</div></pre></td></tr></table></figure>\n<h1 id=\"关键字和保留字\"><a href=\"#关键字和保留字\" class=\"headerlink\" title=\"关键字和保留字\"></a>关键字和保留字</h1><h1 id=\"语句\"><a href=\"#语句\" class=\"headerlink\" title=\"语句\"></a>语句</h1><ul>\n<li>以分号结尾，但不是必须的</li>\n</ul>\n<h1 id=\"注释\"><a href=\"#注释\" class=\"headerlink\" title=\"注释\"></a>注释</h1><ul>\n<li><p>单行注释</p>\n<ul>\n<li>//</li>\n</ul>\n</li>\n<li><p>多行注释</p>\n<ul>\n<li><p>以 /<em>开头，</em>/结尾</p>\n</li>\n<li><p>不可嵌套</p>\n</li>\n</ul>\n</li>\n</ul>\n"},{"title":"nvm使用","date":"2015-09-13T15:12:06.000Z","_content":"\n# 1. 安装脚本\n\n```\n# 这里的 v0.31.1 是版本号，应该以最新版本号为主, 参考 https://github.com/creationix/nvm\ncurl -o- https://raw.githubusercontent.com/creationix/nvm/v0.31.1/install.sh | bash\n```\n\n执行完这个步骤之后，有以下改变：\n\n+ 在$HOME目录下包含`.nvm`，这是一个使用 `git` 管理的项目，也就是说，当我们要更新 `nvm版本`，可以基于 `git` 来更新\n\n+ 在$HOME/.bash_profile里，包含了以下内容：\n```\nexport NVM_DIR=\"/Users/dxlau/.nvm\"\n[ -s \"$NVM_DIR/nvm.sh\" ] && . \"$NVM_DIR/nvm.sh\"  # This loads nvm\n```\n\n`nvm.sh` 脚本导出了一些便于操作的环境变量 （env | grep NVM）:\n\n```\nNVM_CD_FLAGS=\nNVM_PATH=$HOME/.nvm/versions/node/v6.2.2/lib/node\nNVM_DIR=$HOME/.nvm\nNVM_NODEJS_ORG_MIRROR=https://nodejs.org/dist\nNVM_BIN=$HOME/.nvm/versions/node/v6.2.2/bin\nNVM_IOJS_ORG_MIRROR=https://iojs.org/dist\n```\n\n当我们需要针对 `nodejs` 或 `iojs` 设置国内镜像时，就可以通过修改对应的环境变量来达到目的\n\n# 2. 测试安装是否成功\n```\ncommand -v nvm\n只要输出`nvm`就可以了\n```\n\n# 3.使用\n常用的命令在 `$NVM_DIR/README.markdown` 文件里都有示例\n\n## 3.0 查看nvm支持哪些命令\n```\nnvm --help\n```\n\n## 3.1 查看本地安装了哪些版本\n\n```\nnvm ls\n```\n\n## 3.2 查看远程有哪些版本可用\n```\nnvm ls-remote\n```\n\n## 3.3 安装指定版本\n\n```\nnvm install NODE_AVAILABEL_VERSION\n如：nvm install v6.9.1\n```\n\n**NOTE: **安装成功后，需要新开一个窗口执行 `nvm use NODE_VERSION` 进行切换\n\n## 3.4 查看指定版本安装位置\n\n```\nnvm which NODE_AVAILABEL_VERSION\n```\n\n## 3.5 使用特定版本\n```\nnvm use NODE_INSTALLED_VERSION\n```\n再次输入 `nvm ls` 可以看到箭头指向特定版本\n\n## 3.6 使用国内的nodejs镜像\n如果不使用国内镜像的话，每次使用 `nvm install NODE_VERSION` 时，默认都会从 `https://nodejs.org/dist` 下载安装包，下载速度会比较慢。\n\n阿里提供的镜像地址挺好用的，[淘宝NPM镜像](https://npm.taobao.org/)\n\n```\n// 如下命令导出的 NVM_NODEJS_ORG_MIRROR 环境变量只在当前shell窗口有用，可考虑在 .bash_profile 中导出\nexport NVM_NODEJS_ORG_MIRROR=https://npm.taobao.org/mirrors/node\nnvm install NODE_VERSION\n```\n\n# 4.资源\n[NVM in github](https://github.com/creationix/nvm)","source":"_posts/Node/nvm使用.md","raw":"---\ntitle: nvm使用\ndate: 2015-09-13 23:12:06\ntags: node.js\n---\n\n# 1. 安装脚本\n\n```\n# 这里的 v0.31.1 是版本号，应该以最新版本号为主, 参考 https://github.com/creationix/nvm\ncurl -o- https://raw.githubusercontent.com/creationix/nvm/v0.31.1/install.sh | bash\n```\n\n执行完这个步骤之后，有以下改变：\n\n+ 在$HOME目录下包含`.nvm`，这是一个使用 `git` 管理的项目，也就是说，当我们要更新 `nvm版本`，可以基于 `git` 来更新\n\n+ 在$HOME/.bash_profile里，包含了以下内容：\n```\nexport NVM_DIR=\"/Users/dxlau/.nvm\"\n[ -s \"$NVM_DIR/nvm.sh\" ] && . \"$NVM_DIR/nvm.sh\"  # This loads nvm\n```\n\n`nvm.sh` 脚本导出了一些便于操作的环境变量 （env | grep NVM）:\n\n```\nNVM_CD_FLAGS=\nNVM_PATH=$HOME/.nvm/versions/node/v6.2.2/lib/node\nNVM_DIR=$HOME/.nvm\nNVM_NODEJS_ORG_MIRROR=https://nodejs.org/dist\nNVM_BIN=$HOME/.nvm/versions/node/v6.2.2/bin\nNVM_IOJS_ORG_MIRROR=https://iojs.org/dist\n```\n\n当我们需要针对 `nodejs` 或 `iojs` 设置国内镜像时，就可以通过修改对应的环境变量来达到目的\n\n# 2. 测试安装是否成功\n```\ncommand -v nvm\n只要输出`nvm`就可以了\n```\n\n# 3.使用\n常用的命令在 `$NVM_DIR/README.markdown` 文件里都有示例\n\n## 3.0 查看nvm支持哪些命令\n```\nnvm --help\n```\n\n## 3.1 查看本地安装了哪些版本\n\n```\nnvm ls\n```\n\n## 3.2 查看远程有哪些版本可用\n```\nnvm ls-remote\n```\n\n## 3.3 安装指定版本\n\n```\nnvm install NODE_AVAILABEL_VERSION\n如：nvm install v6.9.1\n```\n\n**NOTE: **安装成功后，需要新开一个窗口执行 `nvm use NODE_VERSION` 进行切换\n\n## 3.4 查看指定版本安装位置\n\n```\nnvm which NODE_AVAILABEL_VERSION\n```\n\n## 3.5 使用特定版本\n```\nnvm use NODE_INSTALLED_VERSION\n```\n再次输入 `nvm ls` 可以看到箭头指向特定版本\n\n## 3.6 使用国内的nodejs镜像\n如果不使用国内镜像的话，每次使用 `nvm install NODE_VERSION` 时，默认都会从 `https://nodejs.org/dist` 下载安装包，下载速度会比较慢。\n\n阿里提供的镜像地址挺好用的，[淘宝NPM镜像](https://npm.taobao.org/)\n\n```\n// 如下命令导出的 NVM_NODEJS_ORG_MIRROR 环境变量只在当前shell窗口有用，可考虑在 .bash_profile 中导出\nexport NVM_NODEJS_ORG_MIRROR=https://npm.taobao.org/mirrors/node\nnvm install NODE_VERSION\n```\n\n# 4.资源\n[NVM in github](https://github.com/creationix/nvm)","slug":"Node/nvm使用","published":1,"updated":"2016-11-28T14:26:03.000Z","_id":"ciw26hwoe0000bds6j6ta08y1","comments":1,"layout":"post","photos":[],"link":"","content":"<h1 id=\"1-安装脚本\"><a href=\"#1-安装脚本\" class=\"headerlink\" title=\"1. 安装脚本\"></a>1. 安装脚本</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"># 这里的 v0.31.1 是版本号，应该以最新版本号为主, 参考 https://github.com/creationix/nvm</div><div class=\"line\">curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.31.1/install.sh | bash</div></pre></td></tr></table></figure>\n<p>执行完这个步骤之后，有以下改变：</p>\n<ul>\n<li><p>在$HOME目录下包含<code>.nvm</code>，这是一个使用 <code>git</code> 管理的项目，也就是说，当我们要更新 <code>nvm版本</code>，可以基于 <code>git</code> 来更新</p>\n</li>\n<li><p>在$HOME/.bash_profile里，包含了以下内容：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">export NVM_DIR=&quot;/Users/dxlau/.nvm&quot;</div><div class=\"line\">[ -s &quot;$NVM_DIR/nvm.sh&quot; ] &amp;&amp; . &quot;$NVM_DIR/nvm.sh&quot;  # This loads nvm</div></pre></td></tr></table></figure>\n</li>\n</ul>\n<p><code>nvm.sh</code> 脚本导出了一些便于操作的环境变量 （env | grep NVM）:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">NVM_CD_FLAGS=</div><div class=\"line\">NVM_PATH=$HOME/.nvm/versions/node/v6.2.2/lib/node</div><div class=\"line\">NVM_DIR=$HOME/.nvm</div><div class=\"line\">NVM_NODEJS_ORG_MIRROR=https://nodejs.org/dist</div><div class=\"line\">NVM_BIN=$HOME/.nvm/versions/node/v6.2.2/bin</div><div class=\"line\">NVM_IOJS_ORG_MIRROR=https://iojs.org/dist</div></pre></td></tr></table></figure>\n<p>当我们需要针对 <code>nodejs</code> 或 <code>iojs</code> 设置国内镜像时，就可以通过修改对应的环境变量来达到目的</p>\n<h1 id=\"2-测试安装是否成功\"><a href=\"#2-测试安装是否成功\" class=\"headerlink\" title=\"2. 测试安装是否成功\"></a>2. 测试安装是否成功</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">command -v nvm</div><div class=\"line\">只要输出`nvm`就可以了</div></pre></td></tr></table></figure>\n<h1 id=\"3-使用\"><a href=\"#3-使用\" class=\"headerlink\" title=\"3.使用\"></a>3.使用</h1><p>常用的命令在 <code>$NVM_DIR/README.markdown</code> 文件里都有示例</p>\n<h2 id=\"3-0-查看nvm支持哪些命令\"><a href=\"#3-0-查看nvm支持哪些命令\" class=\"headerlink\" title=\"3.0 查看nvm支持哪些命令\"></a>3.0 查看nvm支持哪些命令</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">nvm --help</div></pre></td></tr></table></figure>\n<h2 id=\"3-1-查看本地安装了哪些版本\"><a href=\"#3-1-查看本地安装了哪些版本\" class=\"headerlink\" title=\"3.1 查看本地安装了哪些版本\"></a>3.1 查看本地安装了哪些版本</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">nvm ls</div></pre></td></tr></table></figure>\n<h2 id=\"3-2-查看远程有哪些版本可用\"><a href=\"#3-2-查看远程有哪些版本可用\" class=\"headerlink\" title=\"3.2 查看远程有哪些版本可用\"></a>3.2 查看远程有哪些版本可用</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">nvm ls-remote</div></pre></td></tr></table></figure>\n<h2 id=\"3-3-安装指定版本\"><a href=\"#3-3-安装指定版本\" class=\"headerlink\" title=\"3.3 安装指定版本\"></a>3.3 安装指定版本</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">nvm install NODE_AVAILABEL_VERSION</div><div class=\"line\">如：nvm install v6.9.1</div></pre></td></tr></table></figure>\n<p><strong>NOTE: </strong>安装成功后，需要新开一个窗口执行 <code>nvm use NODE_VERSION</code> 进行切换</p>\n<h2 id=\"3-4-查看指定版本安装位置\"><a href=\"#3-4-查看指定版本安装位置\" class=\"headerlink\" title=\"3.4 查看指定版本安装位置\"></a>3.4 查看指定版本安装位置</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">nvm which NODE_AVAILABEL_VERSION</div></pre></td></tr></table></figure>\n<h2 id=\"3-5-使用特定版本\"><a href=\"#3-5-使用特定版本\" class=\"headerlink\" title=\"3.5 使用特定版本\"></a>3.5 使用特定版本</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">nvm use NODE_INSTALLED_VERSION</div></pre></td></tr></table></figure>\n<p>再次输入 <code>nvm ls</code> 可以看到箭头指向特定版本</p>\n<h2 id=\"3-6-使用国内的nodejs镜像\"><a href=\"#3-6-使用国内的nodejs镜像\" class=\"headerlink\" title=\"3.6 使用国内的nodejs镜像\"></a>3.6 使用国内的nodejs镜像</h2><p>如果不使用国内镜像的话，每次使用 <code>nvm install NODE_VERSION</code> 时，默认都会从 <code>https://nodejs.org/dist</code> 下载安装包，下载速度会比较慢。</p>\n<p>阿里提供的镜像地址挺好用的，<a href=\"https://npm.taobao.org/\" target=\"_blank\" rel=\"external\">淘宝NPM镜像</a></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">// 如下命令导出的 NVM_NODEJS_ORG_MIRROR 环境变量只在当前shell窗口有用，可考虑在 .bash_profile 中导出</div><div class=\"line\">export NVM_NODEJS_ORG_MIRROR=https://npm.taobao.org/mirrors/node</div><div class=\"line\">nvm install NODE_VERSION</div></pre></td></tr></table></figure>\n<h1 id=\"4-资源\"><a href=\"#4-资源\" class=\"headerlink\" title=\"4.资源\"></a>4.资源</h1><p><a href=\"https://github.com/creationix/nvm\" target=\"_blank\" rel=\"external\">NVM in github</a></p>\n","excerpt":"","more":"<h1 id=\"1-安装脚本\"><a href=\"#1-安装脚本\" class=\"headerlink\" title=\"1. 安装脚本\"></a>1. 安装脚本</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"># 这里的 v0.31.1 是版本号，应该以最新版本号为主, 参考 https://github.com/creationix/nvm</div><div class=\"line\">curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.31.1/install.sh | bash</div></pre></td></tr></table></figure>\n<p>执行完这个步骤之后，有以下改变：</p>\n<ul>\n<li><p>在$HOME目录下包含<code>.nvm</code>，这是一个使用 <code>git</code> 管理的项目，也就是说，当我们要更新 <code>nvm版本</code>，可以基于 <code>git</code> 来更新</p>\n</li>\n<li><p>在$HOME/.bash_profile里，包含了以下内容：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">export NVM_DIR=&quot;/Users/dxlau/.nvm&quot;</div><div class=\"line\">[ -s &quot;$NVM_DIR/nvm.sh&quot; ] &amp;&amp; . &quot;$NVM_DIR/nvm.sh&quot;  # This loads nvm</div></pre></td></tr></table></figure>\n</li>\n</ul>\n<p><code>nvm.sh</code> 脚本导出了一些便于操作的环境变量 （env | grep NVM）:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">NVM_CD_FLAGS=</div><div class=\"line\">NVM_PATH=$HOME/.nvm/versions/node/v6.2.2/lib/node</div><div class=\"line\">NVM_DIR=$HOME/.nvm</div><div class=\"line\">NVM_NODEJS_ORG_MIRROR=https://nodejs.org/dist</div><div class=\"line\">NVM_BIN=$HOME/.nvm/versions/node/v6.2.2/bin</div><div class=\"line\">NVM_IOJS_ORG_MIRROR=https://iojs.org/dist</div></pre></td></tr></table></figure>\n<p>当我们需要针对 <code>nodejs</code> 或 <code>iojs</code> 设置国内镜像时，就可以通过修改对应的环境变量来达到目的</p>\n<h1 id=\"2-测试安装是否成功\"><a href=\"#2-测试安装是否成功\" class=\"headerlink\" title=\"2. 测试安装是否成功\"></a>2. 测试安装是否成功</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">command -v nvm</div><div class=\"line\">只要输出`nvm`就可以了</div></pre></td></tr></table></figure>\n<h1 id=\"3-使用\"><a href=\"#3-使用\" class=\"headerlink\" title=\"3.使用\"></a>3.使用</h1><p>常用的命令在 <code>$NVM_DIR/README.markdown</code> 文件里都有示例</p>\n<h2 id=\"3-0-查看nvm支持哪些命令\"><a href=\"#3-0-查看nvm支持哪些命令\" class=\"headerlink\" title=\"3.0 查看nvm支持哪些命令\"></a>3.0 查看nvm支持哪些命令</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">nvm --help</div></pre></td></tr></table></figure>\n<h2 id=\"3-1-查看本地安装了哪些版本\"><a href=\"#3-1-查看本地安装了哪些版本\" class=\"headerlink\" title=\"3.1 查看本地安装了哪些版本\"></a>3.1 查看本地安装了哪些版本</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">nvm ls</div></pre></td></tr></table></figure>\n<h2 id=\"3-2-查看远程有哪些版本可用\"><a href=\"#3-2-查看远程有哪些版本可用\" class=\"headerlink\" title=\"3.2 查看远程有哪些版本可用\"></a>3.2 查看远程有哪些版本可用</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">nvm ls-remote</div></pre></td></tr></table></figure>\n<h2 id=\"3-3-安装指定版本\"><a href=\"#3-3-安装指定版本\" class=\"headerlink\" title=\"3.3 安装指定版本\"></a>3.3 安装指定版本</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">nvm install NODE_AVAILABEL_VERSION</div><div class=\"line\">如：nvm install v6.9.1</div></pre></td></tr></table></figure>\n<p><strong>NOTE: </strong>安装成功后，需要新开一个窗口执行 <code>nvm use NODE_VERSION</code> 进行切换</p>\n<h2 id=\"3-4-查看指定版本安装位置\"><a href=\"#3-4-查看指定版本安装位置\" class=\"headerlink\" title=\"3.4 查看指定版本安装位置\"></a>3.4 查看指定版本安装位置</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">nvm which NODE_AVAILABEL_VERSION</div></pre></td></tr></table></figure>\n<h2 id=\"3-5-使用特定版本\"><a href=\"#3-5-使用特定版本\" class=\"headerlink\" title=\"3.5 使用特定版本\"></a>3.5 使用特定版本</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">nvm use NODE_INSTALLED_VERSION</div></pre></td></tr></table></figure>\n<p>再次输入 <code>nvm ls</code> 可以看到箭头指向特定版本</p>\n<h2 id=\"3-6-使用国内的nodejs镜像\"><a href=\"#3-6-使用国内的nodejs镜像\" class=\"headerlink\" title=\"3.6 使用国内的nodejs镜像\"></a>3.6 使用国内的nodejs镜像</h2><p>如果不使用国内镜像的话，每次使用 <code>nvm install NODE_VERSION</code> 时，默认都会从 <code>https://nodejs.org/dist</code> 下载安装包，下载速度会比较慢。</p>\n<p>阿里提供的镜像地址挺好用的，<a href=\"https://npm.taobao.org/\">淘宝NPM镜像</a></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">// 如下命令导出的 NVM_NODEJS_ORG_MIRROR 环境变量只在当前shell窗口有用，可考虑在 .bash_profile 中导出</div><div class=\"line\">export NVM_NODEJS_ORG_MIRROR=https://npm.taobao.org/mirrors/node</div><div class=\"line\">nvm install NODE_VERSION</div></pre></td></tr></table></figure>\n<h1 id=\"4-资源\"><a href=\"#4-资源\" class=\"headerlink\" title=\"4.资源\"></a>4.资源</h1><p><a href=\"https://github.com/creationix/nvm\">NVM in github</a></p>\n"},{"title":"HTTP-Cookie","date":"2016-10-11T13:20:46.000Z","_content":"\n## 1. 什么是Cookie\ncookie就像服务器给用户贴的\"嗨，我叫xxx\"的贴纸一样，用户访问一个Web站点时，这个Web站点就可以读取那个服务器贴在用户身上的所有贴纸，是一种用来识别客户端的技术\n-- 来自《HTTP权威指南》11.6.2\n\nCookie是`一小段文本信息`，伴随着用户请求和页面在`Web服务器`和`浏览器`之间传递\n-- 来自 [细说Cookie](http://www.cnblogs.com/fish-li/archive/2011/07/03/2096903.html)\n\n\n## 2. Cookie类型\n+ 持久Cookie\n+ 会话Cookie\n\n它们之间唯一的区别就是它们的过期时间。\n\n## 3. 使用方式\n+ 服务端\n    通过在`HTTP响应头`中增加 `Set-Cookie` 或 `Set-Cookie2` 头字段向客户端增加cookie\n+ 客户端\n    通过在`HTTP请求头`中增加 `cookie` 头字段将cookie值传递回去\n\n## 4. Cookie中的属性\n### 4.1 domain属性\n此属性用来控制哪些站点可以看到这个cookie\n如：\n```\nSet-Cookie: user=\"mary17\"; domain=\"youcompany.com\"\n则所有以`youcompany.com`结尾的域名都能获取到此cookie\n```\n\n### 4.2 path属性\n此属性用来控制哪些路径可以看到这个cookie\n如：\n```\nSet-Cookie: tel=\"1313333322\"; domain=\"youcompany.com\"; path=/autos/\n则只有以`youcompany.com`结尾的域名，并且请求路径以`/autos/`为前缀的请求可以获得此cookie\n```\n\n### 4.3 Expires属性\n用来定义cookie的实际生存期，一旦到了过期时间，就不再存储或发送这个cookie\n如：\n```\nSet-Cookie: user=\"mary17\"; domain=\"youcompany.com\"; expires=Webnesday, 09-Nov-00 23:12:40 GMT\n```\n唯一合法的时区为`GMT`\n\n### 4.4 Secure属性\n用来定义只有在HTTP使用`SSL安全连接时`才会发生此cookie\n如：\n```\nSet-Cookie: user=\"mary17\"; domain=\"youcompany.com\"; secure\n```\n\n### 4.5 HttpOnly属性\n用来定义只有基于`HTTP`或`HTTPS`的通信可以使用此cookie，也就意味着JS API `document.cookie`是无法访问到此cookie的\n如：\n```\nSet-Cookie: user=\"user123\"; domain=\"yourcompany.com\"; httponly\nIE6不支持\n```\n\n## 5.操作Cookie文件\n在 Mac 平台下，Cookie存储在 `~/Library/Application Support/Google/Chrome/Default/Cookies` 文件里，这个文件实质上是一个 `sqlite3 数据库文件`，也就是说，我们是没法直接操作Cookie文件的\n\n那么，要如何操作？\n使用 `Chrome扩展程序—EditThisCookie` 来操作\n\n## 6.HTTP-Session\n在说Cookie与Session的区别之前，先要说明一下，Session是个什么东西。\nSession是一种位于服务端，结合客户端的识别技术(如Cookie或胖URL)，以达到追踪客户端的技术，Session的生命周期其实并不是 `从打开浏览器到关闭浏览器` 这么简单，服务端为每个 Session 是采用过期时间来维护的，所以在某些应用里，我们经常会见到 `会话超时，请重新登陆` 的警示框\n\nSessionId: 这其实是服务端在第一次接收到客户端请求时，为客户端生成的唯一标识，服务端用这个值来标识这个客户端，并且将这个值写入 HTTP响应首部 `Set-Cookie` 或 `Set-Cookie2` 中，客户端在随后的请求中，都会在 HTTP请求首部 `Cookie` 中写入SessionId的值，如此，服务端也就能识别出，这一次的请求和上一个请求是来自于同一个客户端～\n\n总结一下区别:\n+ 服务端技术\n+ 依赖客户端识别技术，但不局限于Cookie，如果客户端禁止cookie的话，可以将SessionId写入胖URL\n","source":"_posts/HTTP/cookie.md","raw":"---\ntitle: HTTP-Cookie\ndate: 2016-10-11 21:20:46\ntags: HTTP\n---\n\n## 1. 什么是Cookie\ncookie就像服务器给用户贴的\"嗨，我叫xxx\"的贴纸一样，用户访问一个Web站点时，这个Web站点就可以读取那个服务器贴在用户身上的所有贴纸，是一种用来识别客户端的技术\n-- 来自《HTTP权威指南》11.6.2\n\nCookie是`一小段文本信息`，伴随着用户请求和页面在`Web服务器`和`浏览器`之间传递\n-- 来自 [细说Cookie](http://www.cnblogs.com/fish-li/archive/2011/07/03/2096903.html)\n\n\n## 2. Cookie类型\n+ 持久Cookie\n+ 会话Cookie\n\n它们之间唯一的区别就是它们的过期时间。\n\n## 3. 使用方式\n+ 服务端\n    通过在`HTTP响应头`中增加 `Set-Cookie` 或 `Set-Cookie2` 头字段向客户端增加cookie\n+ 客户端\n    通过在`HTTP请求头`中增加 `cookie` 头字段将cookie值传递回去\n\n## 4. Cookie中的属性\n### 4.1 domain属性\n此属性用来控制哪些站点可以看到这个cookie\n如：\n```\nSet-Cookie: user=\"mary17\"; domain=\"youcompany.com\"\n则所有以`youcompany.com`结尾的域名都能获取到此cookie\n```\n\n### 4.2 path属性\n此属性用来控制哪些路径可以看到这个cookie\n如：\n```\nSet-Cookie: tel=\"1313333322\"; domain=\"youcompany.com\"; path=/autos/\n则只有以`youcompany.com`结尾的域名，并且请求路径以`/autos/`为前缀的请求可以获得此cookie\n```\n\n### 4.3 Expires属性\n用来定义cookie的实际生存期，一旦到了过期时间，就不再存储或发送这个cookie\n如：\n```\nSet-Cookie: user=\"mary17\"; domain=\"youcompany.com\"; expires=Webnesday, 09-Nov-00 23:12:40 GMT\n```\n唯一合法的时区为`GMT`\n\n### 4.4 Secure属性\n用来定义只有在HTTP使用`SSL安全连接时`才会发生此cookie\n如：\n```\nSet-Cookie: user=\"mary17\"; domain=\"youcompany.com\"; secure\n```\n\n### 4.5 HttpOnly属性\n用来定义只有基于`HTTP`或`HTTPS`的通信可以使用此cookie，也就意味着JS API `document.cookie`是无法访问到此cookie的\n如：\n```\nSet-Cookie: user=\"user123\"; domain=\"yourcompany.com\"; httponly\nIE6不支持\n```\n\n## 5.操作Cookie文件\n在 Mac 平台下，Cookie存储在 `~/Library/Application Support/Google/Chrome/Default/Cookies` 文件里，这个文件实质上是一个 `sqlite3 数据库文件`，也就是说，我们是没法直接操作Cookie文件的\n\n那么，要如何操作？\n使用 `Chrome扩展程序—EditThisCookie` 来操作\n\n## 6.HTTP-Session\n在说Cookie与Session的区别之前，先要说明一下，Session是个什么东西。\nSession是一种位于服务端，结合客户端的识别技术(如Cookie或胖URL)，以达到追踪客户端的技术，Session的生命周期其实并不是 `从打开浏览器到关闭浏览器` 这么简单，服务端为每个 Session 是采用过期时间来维护的，所以在某些应用里，我们经常会见到 `会话超时，请重新登陆` 的警示框\n\nSessionId: 这其实是服务端在第一次接收到客户端请求时，为客户端生成的唯一标识，服务端用这个值来标识这个客户端，并且将这个值写入 HTTP响应首部 `Set-Cookie` 或 `Set-Cookie2` 中，客户端在随后的请求中，都会在 HTTP请求首部 `Cookie` 中写入SessionId的值，如此，服务端也就能识别出，这一次的请求和上一个请求是来自于同一个客户端～\n\n总结一下区别:\n+ 服务端技术\n+ 依赖客户端识别技术，但不局限于Cookie，如果客户端禁止cookie的话，可以将SessionId写入胖URL\n","slug":"HTTP/cookie","published":1,"updated":"2016-11-28T14:45:52.000Z","_id":"ciw26k4o80002bds6y4sg76ek","comments":1,"layout":"post","photos":[],"link":"","content":"<h2 id=\"1-什么是Cookie\"><a href=\"#1-什么是Cookie\" class=\"headerlink\" title=\"1. 什么是Cookie\"></a>1. 什么是Cookie</h2><p>cookie就像服务器给用户贴的”嗨，我叫xxx”的贴纸一样，用户访问一个Web站点时，这个Web站点就可以读取那个服务器贴在用户身上的所有贴纸，是一种用来识别客户端的技术<br>– 来自《HTTP权威指南》11.6.2</p>\n<p>Cookie是<code>一小段文本信息</code>，伴随着用户请求和页面在<code>Web服务器</code>和<code>浏览器</code>之间传递<br>– 来自 <a href=\"http://www.cnblogs.com/fish-li/archive/2011/07/03/2096903.html\" target=\"_blank\" rel=\"external\">细说Cookie</a></p>\n<h2 id=\"2-Cookie类型\"><a href=\"#2-Cookie类型\" class=\"headerlink\" title=\"2. Cookie类型\"></a>2. Cookie类型</h2><ul>\n<li>持久Cookie</li>\n<li>会话Cookie</li>\n</ul>\n<p>它们之间唯一的区别就是它们的过期时间。</p>\n<h2 id=\"3-使用方式\"><a href=\"#3-使用方式\" class=\"headerlink\" title=\"3. 使用方式\"></a>3. 使用方式</h2><ul>\n<li>服务端<br>  通过在<code>HTTP响应头</code>中增加 <code>Set-Cookie</code> 或 <code>Set-Cookie2</code> 头字段向客户端增加cookie</li>\n<li>客户端<br>  通过在<code>HTTP请求头</code>中增加 <code>cookie</code> 头字段将cookie值传递回去</li>\n</ul>\n<h2 id=\"4-Cookie中的属性\"><a href=\"#4-Cookie中的属性\" class=\"headerlink\" title=\"4. Cookie中的属性\"></a>4. Cookie中的属性</h2><h3 id=\"4-1-domain属性\"><a href=\"#4-1-domain属性\" class=\"headerlink\" title=\"4.1 domain属性\"></a>4.1 domain属性</h3><p>此属性用来控制哪些站点可以看到这个cookie<br>如：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">Set-Cookie: user=&quot;mary17&quot;; domain=&quot;youcompany.com&quot;</div><div class=\"line\">则所有以`youcompany.com`结尾的域名都能获取到此cookie</div></pre></td></tr></table></figure></p>\n<h3 id=\"4-2-path属性\"><a href=\"#4-2-path属性\" class=\"headerlink\" title=\"4.2 path属性\"></a>4.2 path属性</h3><p>此属性用来控制哪些路径可以看到这个cookie<br>如：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">Set-Cookie: tel=&quot;1313333322&quot;; domain=&quot;youcompany.com&quot;; path=/autos/</div><div class=\"line\">则只有以`youcompany.com`结尾的域名，并且请求路径以`/autos/`为前缀的请求可以获得此cookie</div></pre></td></tr></table></figure></p>\n<h3 id=\"4-3-Expires属性\"><a href=\"#4-3-Expires属性\" class=\"headerlink\" title=\"4.3 Expires属性\"></a>4.3 Expires属性</h3><p>用来定义cookie的实际生存期，一旦到了过期时间，就不再存储或发送这个cookie<br>如：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">Set-Cookie: user=&quot;mary17&quot;; domain=&quot;youcompany.com&quot;; expires=Webnesday, 09-Nov-00 23:12:40 GMT</div></pre></td></tr></table></figure></p>\n<p>唯一合法的时区为<code>GMT</code></p>\n<h3 id=\"4-4-Secure属性\"><a href=\"#4-4-Secure属性\" class=\"headerlink\" title=\"4.4 Secure属性\"></a>4.4 Secure属性</h3><p>用来定义只有在HTTP使用<code>SSL安全连接时</code>才会发生此cookie<br>如：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">Set-Cookie: user=&quot;mary17&quot;; domain=&quot;youcompany.com&quot;; secure</div></pre></td></tr></table></figure></p>\n<h3 id=\"4-5-HttpOnly属性\"><a href=\"#4-5-HttpOnly属性\" class=\"headerlink\" title=\"4.5 HttpOnly属性\"></a>4.5 HttpOnly属性</h3><p>用来定义只有基于<code>HTTP</code>或<code>HTTPS</code>的通信可以使用此cookie，也就意味着JS API <code>document.cookie</code>是无法访问到此cookie的<br>如：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">Set-Cookie: user=&quot;user123&quot;; domain=&quot;yourcompany.com&quot;; httponly</div><div class=\"line\">IE6不支持</div></pre></td></tr></table></figure></p>\n<h2 id=\"5-操作Cookie文件\"><a href=\"#5-操作Cookie文件\" class=\"headerlink\" title=\"5.操作Cookie文件\"></a>5.操作Cookie文件</h2><p>在 Mac 平台下，Cookie存储在 <code>~/Library/Application Support/Google/Chrome/Default/Cookies</code> 文件里，这个文件实质上是一个 <code>sqlite3 数据库文件</code>，也就是说，我们是没法直接操作Cookie文件的</p>\n<p>那么，要如何操作？<br>使用 <code>Chrome扩展程序—EditThisCookie</code> 来操作</p>\n<h2 id=\"6-HTTP-Session\"><a href=\"#6-HTTP-Session\" class=\"headerlink\" title=\"6.HTTP-Session\"></a>6.HTTP-Session</h2><p>在说Cookie与Session的区别之前，先要说明一下，Session是个什么东西。<br>Session是一种位于服务端，结合客户端的识别技术(如Cookie或胖URL)，以达到追踪客户端的技术，Session的生命周期其实并不是 <code>从打开浏览器到关闭浏览器</code> 这么简单，服务端为每个 Session 是采用过期时间来维护的，所以在某些应用里，我们经常会见到 <code>会话超时，请重新登陆</code> 的警示框</p>\n<p>SessionId: 这其实是服务端在第一次接收到客户端请求时，为客户端生成的唯一标识，服务端用这个值来标识这个客户端，并且将这个值写入 HTTP响应首部 <code>Set-Cookie</code> 或 <code>Set-Cookie2</code> 中，客户端在随后的请求中，都会在 HTTP请求首部 <code>Cookie</code> 中写入SessionId的值，如此，服务端也就能识别出，这一次的请求和上一个请求是来自于同一个客户端～</p>\n<p>总结一下区别:</p>\n<ul>\n<li>服务端技术</li>\n<li>依赖客户端识别技术，但不局限于Cookie，如果客户端禁止cookie的话，可以将SessionId写入胖URL</li>\n</ul>\n","excerpt":"","more":"<h2 id=\"1-什么是Cookie\"><a href=\"#1-什么是Cookie\" class=\"headerlink\" title=\"1. 什么是Cookie\"></a>1. 什么是Cookie</h2><p>cookie就像服务器给用户贴的”嗨，我叫xxx”的贴纸一样，用户访问一个Web站点时，这个Web站点就可以读取那个服务器贴在用户身上的所有贴纸，是一种用来识别客户端的技术<br>– 来自《HTTP权威指南》11.6.2</p>\n<p>Cookie是<code>一小段文本信息</code>，伴随着用户请求和页面在<code>Web服务器</code>和<code>浏览器</code>之间传递<br>– 来自 <a href=\"http://www.cnblogs.com/fish-li/archive/2011/07/03/2096903.html\">细说Cookie</a></p>\n<h2 id=\"2-Cookie类型\"><a href=\"#2-Cookie类型\" class=\"headerlink\" title=\"2. Cookie类型\"></a>2. Cookie类型</h2><ul>\n<li>持久Cookie</li>\n<li>会话Cookie</li>\n</ul>\n<p>它们之间唯一的区别就是它们的过期时间。</p>\n<h2 id=\"3-使用方式\"><a href=\"#3-使用方式\" class=\"headerlink\" title=\"3. 使用方式\"></a>3. 使用方式</h2><ul>\n<li>服务端<br>  通过在<code>HTTP响应头</code>中增加 <code>Set-Cookie</code> 或 <code>Set-Cookie2</code> 头字段向客户端增加cookie</li>\n<li>客户端<br>  通过在<code>HTTP请求头</code>中增加 <code>cookie</code> 头字段将cookie值传递回去</li>\n</ul>\n<h2 id=\"4-Cookie中的属性\"><a href=\"#4-Cookie中的属性\" class=\"headerlink\" title=\"4. Cookie中的属性\"></a>4. Cookie中的属性</h2><h3 id=\"4-1-domain属性\"><a href=\"#4-1-domain属性\" class=\"headerlink\" title=\"4.1 domain属性\"></a>4.1 domain属性</h3><p>此属性用来控制哪些站点可以看到这个cookie<br>如：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">Set-Cookie: user=&quot;mary17&quot;; domain=&quot;youcompany.com&quot;</div><div class=\"line\">则所有以`youcompany.com`结尾的域名都能获取到此cookie</div></pre></td></tr></table></figure></p>\n<h3 id=\"4-2-path属性\"><a href=\"#4-2-path属性\" class=\"headerlink\" title=\"4.2 path属性\"></a>4.2 path属性</h3><p>此属性用来控制哪些路径可以看到这个cookie<br>如：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">Set-Cookie: tel=&quot;1313333322&quot;; domain=&quot;youcompany.com&quot;; path=/autos/</div><div class=\"line\">则只有以`youcompany.com`结尾的域名，并且请求路径以`/autos/`为前缀的请求可以获得此cookie</div></pre></td></tr></table></figure></p>\n<h3 id=\"4-3-Expires属性\"><a href=\"#4-3-Expires属性\" class=\"headerlink\" title=\"4.3 Expires属性\"></a>4.3 Expires属性</h3><p>用来定义cookie的实际生存期，一旦到了过期时间，就不再存储或发送这个cookie<br>如：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">Set-Cookie: user=&quot;mary17&quot;; domain=&quot;youcompany.com&quot;; expires=Webnesday, 09-Nov-00 23:12:40 GMT</div></pre></td></tr></table></figure></p>\n<p>唯一合法的时区为<code>GMT</code></p>\n<h3 id=\"4-4-Secure属性\"><a href=\"#4-4-Secure属性\" class=\"headerlink\" title=\"4.4 Secure属性\"></a>4.4 Secure属性</h3><p>用来定义只有在HTTP使用<code>SSL安全连接时</code>才会发生此cookie<br>如：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">Set-Cookie: user=&quot;mary17&quot;; domain=&quot;youcompany.com&quot;; secure</div></pre></td></tr></table></figure></p>\n<h3 id=\"4-5-HttpOnly属性\"><a href=\"#4-5-HttpOnly属性\" class=\"headerlink\" title=\"4.5 HttpOnly属性\"></a>4.5 HttpOnly属性</h3><p>用来定义只有基于<code>HTTP</code>或<code>HTTPS</code>的通信可以使用此cookie，也就意味着JS API <code>document.cookie</code>是无法访问到此cookie的<br>如：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">Set-Cookie: user=&quot;user123&quot;; domain=&quot;yourcompany.com&quot;; httponly</div><div class=\"line\">IE6不支持</div></pre></td></tr></table></figure></p>\n<h2 id=\"5-操作Cookie文件\"><a href=\"#5-操作Cookie文件\" class=\"headerlink\" title=\"5.操作Cookie文件\"></a>5.操作Cookie文件</h2><p>在 Mac 平台下，Cookie存储在 <code>~/Library/Application Support/Google/Chrome/Default/Cookies</code> 文件里，这个文件实质上是一个 <code>sqlite3 数据库文件</code>，也就是说，我们是没法直接操作Cookie文件的</p>\n<p>那么，要如何操作？<br>使用 <code>Chrome扩展程序—EditThisCookie</code> 来操作</p>\n<h2 id=\"6-HTTP-Session\"><a href=\"#6-HTTP-Session\" class=\"headerlink\" title=\"6.HTTP-Session\"></a>6.HTTP-Session</h2><p>在说Cookie与Session的区别之前，先要说明一下，Session是个什么东西。<br>Session是一种位于服务端，结合客户端的识别技术(如Cookie或胖URL)，以达到追踪客户端的技术，Session的生命周期其实并不是 <code>从打开浏览器到关闭浏览器</code> 这么简单，服务端为每个 Session 是采用过期时间来维护的，所以在某些应用里，我们经常会见到 <code>会话超时，请重新登陆</code> 的警示框</p>\n<p>SessionId: 这其实是服务端在第一次接收到客户端请求时，为客户端生成的唯一标识，服务端用这个值来标识这个客户端，并且将这个值写入 HTTP响应首部 <code>Set-Cookie</code> 或 <code>Set-Cookie2</code> 中，客户端在随后的请求中，都会在 HTTP请求首部 <code>Cookie</code> 中写入SessionId的值，如此，服务端也就能识别出，这一次的请求和上一个请求是来自于同一个客户端～</p>\n<p>总结一下区别:</p>\n<ul>\n<li>服务端技术</li>\n<li>依赖客户端识别技术，但不局限于Cookie，如果客户端禁止cookie的话，可以将SessionId写入胖URL</li>\n</ul>\n"},{"title":"HTTP-编码与国际化","date":"2016-10-13T15:10:33.000Z","_content":"\n# 1.概述\n据 《HTTP权威指南》第16章所述，每天有上亿的人用数百种语言在写着各种文档，为了真正实现万维网的目的，HTTP要能够传输和处理用多种语言和字母表编写的国际性文档\n主要是 `两` 方面的内容：\n+ 字符集编码：用它来请求和显示不同字母表中的内容\n+ 语言标记：用它来标识客户端/服务端所理解的语言以及限制\n\n\n\n# 2.字符集\nHTTP报文中可以装载任何形式语言的实体，如：英文文档、中文文档、图片、语音等，毕竟在传输的过程中，都是二进制形式，那么，问题就来了，客户端怎么知道接收到的HTTP响应报文的实体是何种语言形式的内容呢？通过 `HTTP首部` 来进行协商：\n+ 请求：请求首部 `Accept-Language` 和 `Accept-Charset` 会告知服务端，客户端能理解何种形式的语言以及哪种字符集编码方案\n+ 响应：响应首部 `Content-Language 和 Content-Type的charset` 会告知客户端，响应报文的实体原本是哪种形式的语言的哪种字符集编码方案\n\n如:\n```\n// 请求首部中，表示能理解英语和法语，支持iso-8859-1和utf-8字符集编码\nAccept-Language: en, fr\nAccept-Charset: iso-8859-1, utf-8\n\n// 响应首部中，表示响应实体是使用英文编写、iso-8859-1编码方案进行编码的html文档\nContent-Language: en\nContent-Type: text/html; charset=iso-8859-1\n```\n\n## 2.1 字符集和编码如何工作\n信息在网络中传输时，都是以 `二进制形式` 存在的，如何解释成人类可识别的字符？见下图:\n![HTTP字符集编解码过程](http://7xqdqy.com1.z0.glb.clouddn.com/http-d-16-2.png)\n\n\n## 2.2 乱码\n根据前面提到的内容，使用HTTP协议的过程中，如果出现了乱码，那么最本质的原因，就是因为请求端和响应端对于 `采用何种语言形式的何种字符集编码来解释实体出现了误会`\n\n## 2.3 字符编码\n这里要讲的是 `电子化字符系统`，像这样的语言字符系统，它是一种用来在电子设备之间交互的规范，HTTP里的字符编码只是一种实现罢了\n首先需要了解 `8` 个术语:\n+ 字符：指字母、数字、标点等 `书写原子`，由 `统一字符集（Universal Character Set, UCS）` 首创，它有个非正式的名字，那就是大名鼎鼎的 `Unicode`\n+ 字形：描述字符的笔画图案\n+ 编码后的字符：分配个字符的 `唯一数字编号`\n+ 代码空间：计划用于字符代码值的整数范围\n+ 代码宽度：每个字符代码所用的位数\n+ 字库表：特定的字符工作集，一系列字符组合在一起，是全体字符的一个子集，就好比英语这一体系里包含 `大小写字母`、`数字`、`标点符号`等，它表明了整个字符集能展示的所有字符的范围\n+ 编码字符集：把 `数字化的字符代码` 映射为 `实际的字符`，用一个 `编码值（code point）`来表示一个字符在 `字符库` 中的位置，如 `ASCII中的A`，在字符库中处于 `65位`，那么，`65` 在 `ASCII` 中就表示 `A`.\n+ 字符编码方案：把 `数字化的字符代码` 编码成一系列 `二进制码`，如：针对 `ASCII的A`，就被编码为 `0100 0001`\n\n## 2.4 Unicode和UTF-8\nUnicode是一种编码字符集\nUTF-8是一种变长字符编码方案，UTF（UCS Transformation Format）\n\n# 3.语言标记\n语言标记是一个标准的字符串，用来标识一种口语，如：en -> 英语\n主要出现在 `Content-Language` 和 `Accept-Language` 首部\n语言标记由 `-（连字符）` 分隔的多个部分组成，当然也可以只有一个部分：\n+ 第一个是标准化的 `主子标记`, 通常是 `语言` 标识， 参考 [ISO 639](http://www.iso.org/iso/home/standards/language_codes.htm)\n+ 第二个是可选的，通常是标准化的 `国家记号`， 参考 [ISO-3166](http://www.iso.org/iso/home/standards/country_codes.htm)\n+ 其它尾随的都是未注册的\n\n\n# 资源\nHTTP权威指南-16章\n[RFC-7231](http://httpwg.org/specs/rfc7231.html)\n[卢钧轶-十分钟搞清楚字符集和字符编码](http://cenalulu.github.io/linux/character-encoding/)","source":"_posts/HTTP/编码与国际化.md","raw":"---\ntitle: HTTP-编码与国际化\ndate: 2016-10-13 23:10:33\ntags: HTTP\n---\n\n# 1.概述\n据 《HTTP权威指南》第16章所述，每天有上亿的人用数百种语言在写着各种文档，为了真正实现万维网的目的，HTTP要能够传输和处理用多种语言和字母表编写的国际性文档\n主要是 `两` 方面的内容：\n+ 字符集编码：用它来请求和显示不同字母表中的内容\n+ 语言标记：用它来标识客户端/服务端所理解的语言以及限制\n\n\n\n# 2.字符集\nHTTP报文中可以装载任何形式语言的实体，如：英文文档、中文文档、图片、语音等，毕竟在传输的过程中，都是二进制形式，那么，问题就来了，客户端怎么知道接收到的HTTP响应报文的实体是何种语言形式的内容呢？通过 `HTTP首部` 来进行协商：\n+ 请求：请求首部 `Accept-Language` 和 `Accept-Charset` 会告知服务端，客户端能理解何种形式的语言以及哪种字符集编码方案\n+ 响应：响应首部 `Content-Language 和 Content-Type的charset` 会告知客户端，响应报文的实体原本是哪种形式的语言的哪种字符集编码方案\n\n如:\n```\n// 请求首部中，表示能理解英语和法语，支持iso-8859-1和utf-8字符集编码\nAccept-Language: en, fr\nAccept-Charset: iso-8859-1, utf-8\n\n// 响应首部中，表示响应实体是使用英文编写、iso-8859-1编码方案进行编码的html文档\nContent-Language: en\nContent-Type: text/html; charset=iso-8859-1\n```\n\n## 2.1 字符集和编码如何工作\n信息在网络中传输时，都是以 `二进制形式` 存在的，如何解释成人类可识别的字符？见下图:\n![HTTP字符集编解码过程](http://7xqdqy.com1.z0.glb.clouddn.com/http-d-16-2.png)\n\n\n## 2.2 乱码\n根据前面提到的内容，使用HTTP协议的过程中，如果出现了乱码，那么最本质的原因，就是因为请求端和响应端对于 `采用何种语言形式的何种字符集编码来解释实体出现了误会`\n\n## 2.3 字符编码\n这里要讲的是 `电子化字符系统`，像这样的语言字符系统，它是一种用来在电子设备之间交互的规范，HTTP里的字符编码只是一种实现罢了\n首先需要了解 `8` 个术语:\n+ 字符：指字母、数字、标点等 `书写原子`，由 `统一字符集（Universal Character Set, UCS）` 首创，它有个非正式的名字，那就是大名鼎鼎的 `Unicode`\n+ 字形：描述字符的笔画图案\n+ 编码后的字符：分配个字符的 `唯一数字编号`\n+ 代码空间：计划用于字符代码值的整数范围\n+ 代码宽度：每个字符代码所用的位数\n+ 字库表：特定的字符工作集，一系列字符组合在一起，是全体字符的一个子集，就好比英语这一体系里包含 `大小写字母`、`数字`、`标点符号`等，它表明了整个字符集能展示的所有字符的范围\n+ 编码字符集：把 `数字化的字符代码` 映射为 `实际的字符`，用一个 `编码值（code point）`来表示一个字符在 `字符库` 中的位置，如 `ASCII中的A`，在字符库中处于 `65位`，那么，`65` 在 `ASCII` 中就表示 `A`.\n+ 字符编码方案：把 `数字化的字符代码` 编码成一系列 `二进制码`，如：针对 `ASCII的A`，就被编码为 `0100 0001`\n\n## 2.4 Unicode和UTF-8\nUnicode是一种编码字符集\nUTF-8是一种变长字符编码方案，UTF（UCS Transformation Format）\n\n# 3.语言标记\n语言标记是一个标准的字符串，用来标识一种口语，如：en -> 英语\n主要出现在 `Content-Language` 和 `Accept-Language` 首部\n语言标记由 `-（连字符）` 分隔的多个部分组成，当然也可以只有一个部分：\n+ 第一个是标准化的 `主子标记`, 通常是 `语言` 标识， 参考 [ISO 639](http://www.iso.org/iso/home/standards/language_codes.htm)\n+ 第二个是可选的，通常是标准化的 `国家记号`， 参考 [ISO-3166](http://www.iso.org/iso/home/standards/country_codes.htm)\n+ 其它尾随的都是未注册的\n\n\n# 资源\nHTTP权威指南-16章\n[RFC-7231](http://httpwg.org/specs/rfc7231.html)\n[卢钧轶-十分钟搞清楚字符集和字符编码](http://cenalulu.github.io/linux/character-encoding/)","slug":"HTTP/编码与国际化","published":1,"updated":"2016-11-28T15:04:27.000Z","_id":"ciw277swf0006bds6p2fhqo7f","comments":1,"layout":"post","photos":[],"link":"","content":"<h1 id=\"1-概述\"><a href=\"#1-概述\" class=\"headerlink\" title=\"1.概述\"></a>1.概述</h1><p>据 《HTTP权威指南》第16章所述，每天有上亿的人用数百种语言在写着各种文档，为了真正实现万维网的目的，HTTP要能够传输和处理用多种语言和字母表编写的国际性文档<br>主要是 <code>两</code> 方面的内容：</p>\n<ul>\n<li>字符集编码：用它来请求和显示不同字母表中的内容</li>\n<li>语言标记：用它来标识客户端/服务端所理解的语言以及限制</li>\n</ul>\n<h1 id=\"2-字符集\"><a href=\"#2-字符集\" class=\"headerlink\" title=\"2.字符集\"></a>2.字符集</h1><p>HTTP报文中可以装载任何形式语言的实体，如：英文文档、中文文档、图片、语音等，毕竟在传输的过程中，都是二进制形式，那么，问题就来了，客户端怎么知道接收到的HTTP响应报文的实体是何种语言形式的内容呢？通过 <code>HTTP首部</code> 来进行协商：</p>\n<ul>\n<li>请求：请求首部 <code>Accept-Language</code> 和 <code>Accept-Charset</code> 会告知服务端，客户端能理解何种形式的语言以及哪种字符集编码方案</li>\n<li>响应：响应首部 <code>Content-Language 和 Content-Type的charset</code> 会告知客户端，响应报文的实体原本是哪种形式的语言的哪种字符集编码方案</li>\n</ul>\n<p>如:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">// 请求首部中，表示能理解英语和法语，支持iso-8859-1和utf-8字符集编码</div><div class=\"line\">Accept-Language: en, fr</div><div class=\"line\">Accept-Charset: iso-8859-1, utf-8</div><div class=\"line\"></div><div class=\"line\">// 响应首部中，表示响应实体是使用英文编写、iso-8859-1编码方案进行编码的html文档</div><div class=\"line\">Content-Language: en</div><div class=\"line\">Content-Type: text/html; charset=iso-8859-1</div></pre></td></tr></table></figure></p>\n<h2 id=\"2-1-字符集和编码如何工作\"><a href=\"#2-1-字符集和编码如何工作\" class=\"headerlink\" title=\"2.1 字符集和编码如何工作\"></a>2.1 字符集和编码如何工作</h2><p>信息在网络中传输时，都是以 <code>二进制形式</code> 存在的，如何解释成人类可识别的字符？见下图:<br><img src=\"http://7xqdqy.com1.z0.glb.clouddn.com/http-d-16-2.png\" alt=\"HTTP字符集编解码过程\"></p>\n<h2 id=\"2-2-乱码\"><a href=\"#2-2-乱码\" class=\"headerlink\" title=\"2.2 乱码\"></a>2.2 乱码</h2><p>根据前面提到的内容，使用HTTP协议的过程中，如果出现了乱码，那么最本质的原因，就是因为请求端和响应端对于 <code>采用何种语言形式的何种字符集编码来解释实体出现了误会</code></p>\n<h2 id=\"2-3-字符编码\"><a href=\"#2-3-字符编码\" class=\"headerlink\" title=\"2.3 字符编码\"></a>2.3 字符编码</h2><p>这里要讲的是 <code>电子化字符系统</code>，像这样的语言字符系统，它是一种用来在电子设备之间交互的规范，HTTP里的字符编码只是一种实现罢了<br>首先需要了解 <code>8</code> 个术语:</p>\n<ul>\n<li>字符：指字母、数字、标点等 <code>书写原子</code>，由 <code>统一字符集（Universal Character Set, UCS）</code> 首创，它有个非正式的名字，那就是大名鼎鼎的 <code>Unicode</code></li>\n<li>字形：描述字符的笔画图案</li>\n<li>编码后的字符：分配个字符的 <code>唯一数字编号</code></li>\n<li>代码空间：计划用于字符代码值的整数范围</li>\n<li>代码宽度：每个字符代码所用的位数</li>\n<li>字库表：特定的字符工作集，一系列字符组合在一起，是全体字符的一个子集，就好比英语这一体系里包含 <code>大小写字母</code>、<code>数字</code>、<code>标点符号</code>等，它表明了整个字符集能展示的所有字符的范围</li>\n<li>编码字符集：把 <code>数字化的字符代码</code> 映射为 <code>实际的字符</code>，用一个 <code>编码值（code point）</code>来表示一个字符在 <code>字符库</code> 中的位置，如 <code>ASCII中的A</code>，在字符库中处于 <code>65位</code>，那么，<code>65</code> 在 <code>ASCII</code> 中就表示 <code>A</code>.</li>\n<li>字符编码方案：把 <code>数字化的字符代码</code> 编码成一系列 <code>二进制码</code>，如：针对 <code>ASCII的A</code>，就被编码为 <code>0100 0001</code></li>\n</ul>\n<h2 id=\"2-4-Unicode和UTF-8\"><a href=\"#2-4-Unicode和UTF-8\" class=\"headerlink\" title=\"2.4 Unicode和UTF-8\"></a>2.4 Unicode和UTF-8</h2><p>Unicode是一种编码字符集<br>UTF-8是一种变长字符编码方案，UTF（UCS Transformation Format）</p>\n<h1 id=\"3-语言标记\"><a href=\"#3-语言标记\" class=\"headerlink\" title=\"3.语言标记\"></a>3.语言标记</h1><p>语言标记是一个标准的字符串，用来标识一种口语，如：en -&gt; 英语<br>主要出现在 <code>Content-Language</code> 和 <code>Accept-Language</code> 首部<br>语言标记由 <code>-（连字符）</code> 分隔的多个部分组成，当然也可以只有一个部分：</p>\n<ul>\n<li>第一个是标准化的 <code>主子标记</code>, 通常是 <code>语言</code> 标识， 参考 <a href=\"http://www.iso.org/iso/home/standards/language_codes.htm\" target=\"_blank\" rel=\"external\">ISO 639</a></li>\n<li>第二个是可选的，通常是标准化的 <code>国家记号</code>， 参考 <a href=\"http://www.iso.org/iso/home/standards/country_codes.htm\" target=\"_blank\" rel=\"external\">ISO-3166</a></li>\n<li>其它尾随的都是未注册的</li>\n</ul>\n<h1 id=\"资源\"><a href=\"#资源\" class=\"headerlink\" title=\"资源\"></a>资源</h1><p>HTTP权威指南-16章<br><a href=\"http://httpwg.org/specs/rfc7231.html\" target=\"_blank\" rel=\"external\">RFC-7231</a><br><a href=\"http://cenalulu.github.io/linux/character-encoding/\" target=\"_blank\" rel=\"external\">卢钧轶-十分钟搞清楚字符集和字符编码</a></p>\n","excerpt":"","more":"<h1 id=\"1-概述\"><a href=\"#1-概述\" class=\"headerlink\" title=\"1.概述\"></a>1.概述</h1><p>据 《HTTP权威指南》第16章所述，每天有上亿的人用数百种语言在写着各种文档，为了真正实现万维网的目的，HTTP要能够传输和处理用多种语言和字母表编写的国际性文档<br>主要是 <code>两</code> 方面的内容：</p>\n<ul>\n<li>字符集编码：用它来请求和显示不同字母表中的内容</li>\n<li>语言标记：用它来标识客户端/服务端所理解的语言以及限制</li>\n</ul>\n<h1 id=\"2-字符集\"><a href=\"#2-字符集\" class=\"headerlink\" title=\"2.字符集\"></a>2.字符集</h1><p>HTTP报文中可以装载任何形式语言的实体，如：英文文档、中文文档、图片、语音等，毕竟在传输的过程中，都是二进制形式，那么，问题就来了，客户端怎么知道接收到的HTTP响应报文的实体是何种语言形式的内容呢？通过 <code>HTTP首部</code> 来进行协商：</p>\n<ul>\n<li>请求：请求首部 <code>Accept-Language</code> 和 <code>Accept-Charset</code> 会告知服务端，客户端能理解何种形式的语言以及哪种字符集编码方案</li>\n<li>响应：响应首部 <code>Content-Language 和 Content-Type的charset</code> 会告知客户端，响应报文的实体原本是哪种形式的语言的哪种字符集编码方案</li>\n</ul>\n<p>如:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">// 请求首部中，表示能理解英语和法语，支持iso-8859-1和utf-8字符集编码</div><div class=\"line\">Accept-Language: en, fr</div><div class=\"line\">Accept-Charset: iso-8859-1, utf-8</div><div class=\"line\"></div><div class=\"line\">// 响应首部中，表示响应实体是使用英文编写、iso-8859-1编码方案进行编码的html文档</div><div class=\"line\">Content-Language: en</div><div class=\"line\">Content-Type: text/html; charset=iso-8859-1</div></pre></td></tr></table></figure></p>\n<h2 id=\"2-1-字符集和编码如何工作\"><a href=\"#2-1-字符集和编码如何工作\" class=\"headerlink\" title=\"2.1 字符集和编码如何工作\"></a>2.1 字符集和编码如何工作</h2><p>信息在网络中传输时，都是以 <code>二进制形式</code> 存在的，如何解释成人类可识别的字符？见下图:<br><img src=\"http://7xqdqy.com1.z0.glb.clouddn.com/http-d-16-2.png\" alt=\"HTTP字符集编解码过程\"></p>\n<h2 id=\"2-2-乱码\"><a href=\"#2-2-乱码\" class=\"headerlink\" title=\"2.2 乱码\"></a>2.2 乱码</h2><p>根据前面提到的内容，使用HTTP协议的过程中，如果出现了乱码，那么最本质的原因，就是因为请求端和响应端对于 <code>采用何种语言形式的何种字符集编码来解释实体出现了误会</code></p>\n<h2 id=\"2-3-字符编码\"><a href=\"#2-3-字符编码\" class=\"headerlink\" title=\"2.3 字符编码\"></a>2.3 字符编码</h2><p>这里要讲的是 <code>电子化字符系统</code>，像这样的语言字符系统，它是一种用来在电子设备之间交互的规范，HTTP里的字符编码只是一种实现罢了<br>首先需要了解 <code>8</code> 个术语:</p>\n<ul>\n<li>字符：指字母、数字、标点等 <code>书写原子</code>，由 <code>统一字符集（Universal Character Set, UCS）</code> 首创，它有个非正式的名字，那就是大名鼎鼎的 <code>Unicode</code></li>\n<li>字形：描述字符的笔画图案</li>\n<li>编码后的字符：分配个字符的 <code>唯一数字编号</code></li>\n<li>代码空间：计划用于字符代码值的整数范围</li>\n<li>代码宽度：每个字符代码所用的位数</li>\n<li>字库表：特定的字符工作集，一系列字符组合在一起，是全体字符的一个子集，就好比英语这一体系里包含 <code>大小写字母</code>、<code>数字</code>、<code>标点符号</code>等，它表明了整个字符集能展示的所有字符的范围</li>\n<li>编码字符集：把 <code>数字化的字符代码</code> 映射为 <code>实际的字符</code>，用一个 <code>编码值（code point）</code>来表示一个字符在 <code>字符库</code> 中的位置，如 <code>ASCII中的A</code>，在字符库中处于 <code>65位</code>，那么，<code>65</code> 在 <code>ASCII</code> 中就表示 <code>A</code>.</li>\n<li>字符编码方案：把 <code>数字化的字符代码</code> 编码成一系列 <code>二进制码</code>，如：针对 <code>ASCII的A</code>，就被编码为 <code>0100 0001</code></li>\n</ul>\n<h2 id=\"2-4-Unicode和UTF-8\"><a href=\"#2-4-Unicode和UTF-8\" class=\"headerlink\" title=\"2.4 Unicode和UTF-8\"></a>2.4 Unicode和UTF-8</h2><p>Unicode是一种编码字符集<br>UTF-8是一种变长字符编码方案，UTF（UCS Transformation Format）</p>\n<h1 id=\"3-语言标记\"><a href=\"#3-语言标记\" class=\"headerlink\" title=\"3.语言标记\"></a>3.语言标记</h1><p>语言标记是一个标准的字符串，用来标识一种口语，如：en -&gt; 英语<br>主要出现在 <code>Content-Language</code> 和 <code>Accept-Language</code> 首部<br>语言标记由 <code>-（连字符）</code> 分隔的多个部分组成，当然也可以只有一个部分：</p>\n<ul>\n<li>第一个是标准化的 <code>主子标记</code>, 通常是 <code>语言</code> 标识， 参考 <a href=\"http://www.iso.org/iso/home/standards/language_codes.htm\">ISO 639</a></li>\n<li>第二个是可选的，通常是标准化的 <code>国家记号</code>， 参考 <a href=\"http://www.iso.org/iso/home/standards/country_codes.htm\">ISO-3166</a></li>\n<li>其它尾随的都是未注册的</li>\n</ul>\n<h1 id=\"资源\"><a href=\"#资源\" class=\"headerlink\" title=\"资源\"></a>资源</h1><p>HTTP权威指南-16章<br><a href=\"http://httpwg.org/specs/rfc7231.html\">RFC-7231</a><br><a href=\"http://cenalulu.github.io/linux/character-encoding/\">卢钧轶-十分钟搞清楚字符集和字符编码</a></p>\n"}],"PostAsset":[],"PostCategory":[],"PostTag":[{"post_id":"civxx4j22000061s6mgrs5zn9","tag_id":"civxx68fn000161s60joq43de","_id":"civxx68fq000261s67yonrnm0"},{"post_id":"civxyr9c0000661s6te5fuoj6","tag_id":"civxyspqt000861s6rvb61wmv","_id":"civxyspqu000961s6dcfiw0hs"},{"post_id":"civxz0nvk000c61s68ncm20bb","tag_id":"civxyspqt000861s6rvb61wmv","_id":"civxz0nvn000d61s602apsmdt"},{"post_id":"civxz23zw000e61s6ouur1prf","tag_id":"civxzbdnv000g61s63l4kapi0","_id":"civxzbdnx000h61s60jcc1zew"},{"post_id":"ciw26hwoe0000bds6j6ta08y1","tag_id":"civxxnvys000461s64f6y8fwp","_id":"ciw26hwoo0001bds6wzd4yrqp"},{"post_id":"ciw26k4o80002bds6y4sg76ek","tag_id":"ciw26le680004bds65hvxuav1","_id":"ciw26le690005bds6bswve9aj"},{"post_id":"ciw277swf0006bds6p2fhqo7f","tag_id":"ciw26le680004bds65hvxuav1","_id":"ciw278sab0007bds6wphm8uvw"}],"Tag":[{"name":"npm","_id":"civxx68fn000161s60joq43de"},{"name":"node.js","_id":"civxxnvys000461s64f6y8fwp"},{"name":"css","_id":"civxyspqt000861s6rvb61wmv"},{"name":"js","_id":"civxzbdnv000g61s63l4kapi0"},{"name":"HTTP","_id":"ciw26le680004bds65hvxuav1"}]}}